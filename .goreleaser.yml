project_name: kosli
before:
  hooks:
  - go mod tidy
builds:
  - id: kosli
    binary: kosli
    ldflags: 
      - -w -s
      - -X github.com/kosli-dev/cli/internal/version.version={{ .Tag }}
      - -X github.com/kosli-dev/cli/internal/version.gitCommit={{ .FullCommit }}
      - -X github.com/kosli-dev/cli/internal/version.gitTreeState=clean
      - -extldflags "-static"
    env:
      - CGO_ENABLED=0
      - GO111MODULE=on
    goos:
      - darwin
      - linux
      - windows
    goarch:
      - amd64
      - arm64
      - arm
    main: ./cmd/kosli/

archives:
  -
    # Can be used to change the archive formats for specific GOOSs.
    # Most common use case is to archive as zip on Windows.
    # Default is empty.
    format_overrides:
      - goos: windows
        format: zip


brews:
  -
    # GitHub/GitLab repository to push the formula to
    tap:
      owner: kosli-dev
      name: homebrew-tap
      branch: main

    url_template: "https://github.com/kosli-dev/cli/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

    # The project name and current git tag are used in the format string.
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"

    folder: Formula

    homepage: "https://kosli.com/"
    description: "A CLI client for reporting compliance events to  https://kosli.com"
    license: "MIT"

    # Packages your package depends on.
    dependencies:
      - name: go

    # So you can `brew test` your formula.
    # Default is empty.
    test: |
      system "#{bin}/kosli", "version"
      version_output = shell_output(bin/"kosli version 2>&1")
      assert_match "GitTreeState:\"clean\"", version_output

      if build.stable?
        revision = stable.specs[:revision]
        assert_match "GitCommit:\"#{revision}\"", version_output
        assert_match "Version:\"v#{version}\"", version_output
      end

    install: |
      bin.install "kosli"