[{"id":0,"href":"/concepts/","title":"Concepts","section":"","content":"Concepts #  "},{"id":1,"href":"/concepts/devops_change_is_the_new_normal/","title":"DevOps: Change is the New Normal","section":"Concepts","content":"DevOps: Change is the New Normal #  The software industry is moving away from large, monolithic, centrally managed IT systems, towards a future with small, loosely coupled and rapidly updated micro-systems.\nAnd the rate of change is growing exponentially. Whereas in the past we would have quarterly releases orchestrated by IT departments, we now have a continuous stream of changes to production, delivered by cross functional teams operating in a you-build-it-you-run-it ownership structure.\nAll this is made possible by DevOps culture, practices and tooling.\n Is all this change a good thing?\nFrom the position of traditional IT departments, all this change can be a scary proposition. With so much happening all the time, how is anyone supposed to understand and manage the risks?\nThe good news is that not only is devops proven to drive better business outcomes, it also improves risk management. To find out more about the research on this topic, we recommend looking into the DORA State of DevOps Report and the book Accelerate by Nicole Forsgren et al.\n One of the main shifts that enables devops is value stream thinking. In essence, the philosophy is that change itself is the value that goes through the value stream. By applying the lean principles of minimizing waste and continuous improvement we can improve the flow of change in our organization.\nDevOps practitioners often categorize the value stream into two distinct areas:\n Product Design and Development:** often called the fuzzy front end, the host of activities taking place such as product management, prioritization, coding and testing, documentation. Product Delivery:** the repeatable process for delivering software changes to production.  While Product Design and Delivery steps are novel, hard to estimate, and highly variable, Product Delivery steps should be repeatable and predictable.\nA DevOps pipeline can form part of the value stream of a software change delivery process.\nAutomating the Product Delivery process is a key step in any DevOps journey.\n"},{"id":2,"href":"/concepts/devops_and_change_management/","title":"DevOps and Change Management","section":"Concepts","content":"DevOps and Change Management #  If you work in regulated industries such as finance, medical, and retail, or even just need to follow certain industry standards such as ISO - the way you make software has compliance needs.\nAt a high level, all software processes have three components:\n Process: You must have a defined (documented) way of working Implementation: You must follow this process Proof: You must be able to prove that you have followed this process  So how are these needs typically met in traditional IT change management vs DevOps Change management?\n   Approach Process Implementation Proof     Traditional Wiki Documentation Manual build, qualification, and deployment Meeting minutes and Change Documentation   DevOps Lite Wiki Documentation DevOps Pipelines Meeting minutes and Change Documentation   DevOps Live Documentation DevOps Pipelines DevOps Journal    It can be tempting to adopt DevOps and carry on with traditional change management approaches. In this setup, you implement continuous integration and continuous delivery, and when it comes time to release you create the necessary proof that processes have been followed.\nThis approach provides the illusion of speed, however it comes with some serious consequences. While the team can feel that they are efficient and able to work in fast loops, they are not connected to the final delivery to the customer until long after the work is complete. This batching of changes increases lead times, slows feedback, increases the risk that a change will fail, and makes it difficult to debug failures that occur. We call this the DevOps-Lite Trap, or DOLT.. (insert picture of homer simpson)\n How do you know if you are in the devops-lite trap?\nYou could be in the trap if your team has CI which automatically builds and tests their software but:\n Cannot deploy on demand Depend upon another team to deliver your work Are not responsible for operating the application   A better approach is to automatically bake in as much change management and risk controls as possible into every change, using DevOps Change Management.\nThis approach:\n Reduces manual work Improves process conformance Shortens lead time for changes Lowers deployment risks  "},{"id":3,"href":"/concepts/mapping_your_value_stream/","title":"Mapping your value stream","section":"Concepts","content":"Mapping your value stream #  When implementing DevOps Change Management, the first step is to uncover your process as a team. The way we most often do this is to run a value stream mapping exercise with the team. This can be as simple as spending 30 minutes around a whiteboard, or as involved as you like.\nMany aspects of the process will be implemented in your devops automation and tooling such as:\n How you use version control How you build How you test \u0026amp; qualify How you deploy  You may also want to define the role people play in the process (what we call human-in-the loop needs)\n Code review/pull request expectations Deployment sign-off Validation   What are human-in-the-loop controls?\nWhile we would like to believe that everything in your process can be automated, the reality is that many controls can only be performed by real people. A common example is in the financial sector, where the need for code review is mandated to reduce insider threat risks. We call these human-in-the-loop controls.\nHow does this fit into Devops Change Management? Even though these essential risk controls must be performed by humans, we can still improve the processes by taking a devops approach:\n Automate the control: check that the control has been performed programmatically in the devops pipeline Automate the audit trail: document the control has been performed programatically in the devops pipeline Automate the audit trail: document the control has been performed programatically in the devops pipeline   Once you have mapped out your value steam, the next stage is to model this in your devops tooling.\n"},{"id":4,"href":"/client_reference/","title":"Merkely Commands","section":"","content":"Merkely Client Reference #  "},{"id":5,"href":"/helm/","title":"Helm","section":"","content":"Helm #  "},{"id":6,"href":"/concepts/understanding_binary_provenance/","title":"Understanding Binary Provenance","section":"Concepts","content":"Understanding Binary Provenance #  From a security and change management perspective, the strongest form of trust in your production environment is to identify what is running and know where it came from.\nThis is important because all the controls, audit trails and tools are worth nothing if you can simply switch the binaries at any stage in your delivery process.\nTo implement binary provenance, there are two problems to solve:\n How to uniquely identify your software How to trace this identity to a provenance audit trail  Traditionally, software artifacts (docker images, zip files, etc) are identified using labels, such as, semantic versions, filenames, or other metadata. We prefer to identify each software artifact by its binary content.\n What is Content-Addressable Storage?\nContent-Addressable Storage is a fancy phrase with a simple meaning: ‚Äúthe content of the binary determines its identity‚Äù. Cryptographic hash functions such as the sha256 digest give you a one-way algorithm for identifying any collection of bytes. This digest acts as a unique fingerprint.\nAny change to the software package would result in a different fingerprint.\n There are many advantages to this approach:\n Any tampering to the image produces a different fingerprint There is no need for specific naming or versioning There is no need for metadata to be tracked along with binaries  In addition, this approach significantly simplifies your devops pipelines.\nNow that we can identify software, then we need to solve the second problem: how do we trace this identity to a provenance audit trail? For this we need somewhere secure to store our evidence, be that a database, a git repository, or Merkely (which happens to be both üòá).\n"},{"id":7,"href":"/helm/helm_chart/","title":"Helm Chart","section":"Helm","content":"k8s-reporter #  A Helm chart for installing the Merkely K8S reporter as a cronjob. The chart allows you to create a Kubernetes cronjob and all its necessary RBAC to report running images to Merkely at a given cron schedule.\nPrerequisites #   A Kubernetes cluster Helm v3.0+  Installing the chart #  Installing from source #  You can install the Merkely reporter Helm chart from source code:\ngit clone https://github.com/merkely-development/reporter.git cd reporter/charts/k8s-reporter helm install [RELEASE-NAME] . -f [VALUES-FILE-PATH] Installing from the Helm Repository #  To install this chart via the Helm chart repository:\nhelm repo add merkely https://charts.merkely.com/ helm repo update helm install [RELEASE-NAME] merkely/k8s-reporter -f [VALUES-FILE-PATH] Upgrading the chart #  Upgrading from source #  helm upgrade [RELEASE-NAME] . Upgrading from the Helm chart repository #  helm upgrade [RELEASE-NAME] merkely/k8s-reporter Configurations #     Key Type Default Description     cronSchedule string \u0026quot;*/5 * * * *\u0026quot; the cron schedule at which the reporter is triggered to report to Merkely   fullnameOverride string \u0026quot;\u0026quot; overrides the fullname used for the created k8s resources. It has higher precedence than nameOverride   image.pullPolicy string \u0026quot;IfNotPresent\u0026quot; the merkely reporter image pull policy   image.repository string \u0026quot;ghcr.io/merkely-development/reporter\u0026quot; the merkely reporter image repository   image.tag string \u0026quot;v0.5.0\u0026quot; the merkely reporter image tag, overrides the image tag whose default is the chart appVersion.   merkelyApiToken.secretKey string \u0026quot;\u0026quot; the name of the key in the secret data which containts the Merkely API token   merkelyApiToken.secretName string \u0026quot;\u0026quot; the name of the secret containing the Merkely API token   nameOverride string \u0026quot;\u0026quot; overrides the name used for the created k8s resources. If fullnameOverride is provided, it has higher precedence than this one   podAnnotations object {}    reporterConfig.dryRun bool false whether the dry run mode is enabled or not. In dry run mode, the reporter logs the reports to stdout and does not send them to Merkely.   reporterConfig.merkelyEnvironmentName string \u0026quot;\u0026quot; the name of Merkely environment that the k8s cluster/namespace correlates to   reporterConfig.merkelyOwner string \u0026quot;\u0026quot; the name of the Merkely owner (Org)   reporterConfig.namespaces string \u0026quot;\u0026quot; the namespaces which represent the environment. It is a comma separated list of namespace name regex patterns. e.g. ^prod$,^dev-* reports for the prod namespace and any namespace that starts with dev- leave this unset if you want to report what is running in the entire cluster   resources.limits.cpu string \u0026quot;100m\u0026quot; the cpu limit   resources.limits.memory string \u0026quot;256Mi\u0026quot; the memory limit   resources.requests.memory string \u0026quot;64Mi\u0026quot; the memory request   serviceAccount.annotations object {} annotations to add to the service account   serviceAccount.create bool true specifies whether a service account should be created   serviceAccount.name string \u0026quot;\u0026quot; the name of the service account to use. If not set and create is true, a name is generated using the fullname template     Autogenerated from chart metadata using helm-docs v1.5.0\n"},{"id":8,"href":"/client_reference/merkely/","title":"merkely","section":"Merkely Commands","content":"merkely #  The Merkely evidence reporting CLI.\nSynopsis #  The Merkely evidence reporting CLI.\nEnvironment variables:\n   Name Description     $MERKELY_API_TOKEN set the Merkely API token.   $MERKELY_OWNER set the Merkely Pipeline Owner.   $MERKELY_HOST set the Merkely host.   $MERKELY_DRY_RUN indicate whether or not Merkely CLI is running in Dry Run mode.   $MERKELY_MAX_API_RETRIES set the maximum number of API calling retries when the API host is not reachable.   $MERKELY_CONFIG_FILE set the path to Merkely config file where you can set your options.    Options #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -h, --help help for merkely -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely environment\t- All environments operations in Merkely. merkely fingerprint\t- Print the SHA256 fingerprint of an artifact. merkely pipeline\t- All Merkely pipelines operations. merkely version\t- Print the client version information  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":9,"href":"/client_reference/merkely_environment/","title":"merkely environment","section":"Merkely Commands","content":"merkely environment #  All environments operations in Merkely.\nSynopsis #  All environments operations in Merkely.\nOptions #   -h, --help help for environment Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely\t- The Merkely evidence reporting CLI. merkely environment declare\t- Declare or update a Merkely environment merkely environment report\t- Report artifacts running in an environemt to Merkely.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":10,"href":"/client_reference/merkely_environment_declare/","title":"merkely environment declare","section":"Merkely Commands","content":"merkely environment declare #  Declare or update a Merkely environment\nSynopsis #  Declare or update a Merkely environment.\nmerkely environment declare [flags] Examples #   * declare (or update) a Merkely environment: merkely environment declare --api-token 1234 --owner test --name newEnv --environment-type K8S --description \u0026quot;my new env\u0026quot; Options #   -d, --description string [optional] The environment description. -t, --environment-type string The type of environment. Valid options are: [K8S, ECS, server] -h, --help help for declare -n, --name string The name of environment. Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely environment\t- All environments operations in Merkely.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":11,"href":"/client_reference/merkely_environment_report/","title":"merkely environment report","section":"Merkely Commands","content":"merkely environment report #  Report artifacts running in an environemt to Merkely.\nSynopsis #  Report artifacts running in an environemt to Merkely.\nOptions #   -h, --help help for report Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely environment\t- All environments operations in Merkely. merkely environment report ecs\t- Report images data from AWS ECS cluster to Merkely. merkely environment report k8s\t- Report images data from specific namespace(s) or entire cluster to Merkely. merkely environment report server\t- Report directory or file artifacts data in the given list of paths to Merkely.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":12,"href":"/client_reference/merkely_environment_report_ecs/","title":"merkely environment report ecs","section":"Merkely Commands","content":"merkely environment report ecs #  Report images data from AWS ECS cluster to Merkely.\nSynopsis #  List the artifacts deployed in an AWS ECS cluster and their digests and report them to Merkely.\nmerkely environment report ecs env-name [flags] Examples #   * report what's running in an entire AWS ECS cluster: merkely environment report ecs prod --api-token 1234 --owner exampleOrg Options #   -C, --cluster string The name of the ECS cluster. -h, --help help for ecs -i, --id string The unique identifier of the source infrastructure of the report (e.g. the ECS cluster/service name).If not set, it is defaulted based on the following order: --service-name, --cluster, environment name. -s, --service-name string The name of the ECS service. Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely environment report\t- Report artifacts running in an environemt to Merkely.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":13,"href":"/client_reference/merkely_environment_report_k8s/","title":"merkely environment report k8s","section":"Merkely Commands","content":"merkely environment report k8s #  Report images data from specific namespace(s) or entire cluster to Merkely.\nSynopsis #  List the artifacts deployed in the k8s environment and their digests and report them to Merkely.\nmerkely environment report k8s [-n namespace | -x namespace]... [-k /path/to/kube/config] [-i infrastructure-identifier] env-name [flags] Examples #   * report what's running in an entire cluster using kubeconfig at $HOME/.kube/config: merkely environment report k8s prod --api-token 1234 --owner exampleOrg --id prod-cluster * report what's running in an entire cluster using kubeconfig at $HOME/.kube/config (with global flags defined in environment or in a config file): merkely environment report k8s prod * report what's running in an entire cluster excluding some namespaces using kubeconfig at $HOME/.kube/config: merkely environment report k8s prod -x kube-system,utilities * report what's running in a given namespace in the cluster using kubeconfig at $HOME/.kube/config: merkely environment report k8s prod -n prod-namespace * report what's running in a cluster using kubeconfig at a custom path: merkely environment report k8s prod -k /path/to/kube/config Options #   -x, --exclude-namespace strings The comma separated list of namespaces regex patterns NOT to report artifacts info from. Can't be used together with --namespace. -h, --help help for k8s -i, --id string The unique identifier of the source infrastructure of the report (e.g. the K8S cluster/namespace name). If not set, it is defaulted to environment name. -k, --kubeconfig string The kubeconfig path for the target cluster. -n, --namespace strings The comma separated list of namespaces regex patterns to report artifacts info from. Can't be used together with --exclude-namespace. Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely environment report\t- Report artifacts running in an environemt to Merkely.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":14,"href":"/client_reference/merkely_environment_report_server/","title":"merkely environment report server","section":"Merkely Commands","content":"merkely environment report server #  Report directory or file artifacts data in the given list of paths to Merkely.\nSynopsis #  List the artifacts deployed in a server environment and their digests and report them to Merkely.\nmerkely environment report server [-p /path/of/artifacts/directory] [-i infrastructure-identifier] env-name [flags] Examples #   * report directory artifacts running in a server at a list of paths: merkely environment report server prod --api-token 1234 --owner exampleOrg --id prod-server --paths a/b/c, e/f/g Options #   -h, --help help for server -i, --id string The unique identifier of the source infrastructure of the report (e.g. the K8S cluster/namespace name). If not set, it is defaulted to environment name. -p, --paths strings The comma separated list of artifact directories. Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely environment report\t- Report artifacts running in an environemt to Merkely.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":15,"href":"/client_reference/merkely_fingerprint/","title":"merkely fingerprint","section":"Merkely Commands","content":"merkely fingerprint #  Print the SHA256 fingerprint of an artifact.\nSynopsis #  Print the SHA256 fingerprint of an artifact. Requires artifact type flag to be set. Artifact type can be one of: \u0026ldquo;file\u0026rdquo; for files, \u0026ldquo;dir\u0026rdquo; for directories, \u0026ldquo;docker\u0026rdquo; for docker images.\nmerkely fingerprint [flags] Options #   -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint. -h, --help help for fingerprint Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely\t- The Merkely evidence reporting CLI.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":16,"href":"/client_reference/merkely_pipeline/","title":"merkely pipeline","section":"Merkely Commands","content":"merkely pipeline #  All Merkely pipelines operations.\nSynopsis #  All Merkely pipelines operations.\nOptions #   -h, --help help for pipeline Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely\t- The Merkely evidence reporting CLI. merkely pipeline approval\t- All approvals operations in a Merkely pipeline. merkely pipeline artifact\t- All artifacts operations in a Merkely pipeline. merkely pipeline declare\t- Declare or update a Merkely pipeline merkely pipeline deployment\t- All deployment operations in a Merkely pipeline.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":17,"href":"/client_reference/merkely_pipeline_approval/","title":"merkely pipeline approval","section":"Merkely Commands","content":"merkely pipeline approval #  All approvals operations in a Merkely pipeline.\nSynopsis #  All approvals operations in a Merkely pipeline.\nOptions #   -h, --help help for approval Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely pipeline\t- All Merkely pipelines operations. merkely pipeline approval assert\t- Assert if an artifact in Merkely has been approved for deployment. merkely pipeline approval report\t- Report approval of deploying an artifact in Merkely. merkely pipeline approval request\t- Request an approval for deploying an artifact in Merkely.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":18,"href":"/client_reference/merkely_pipeline_approval_assert/","title":"merkely pipeline approval assert","section":"Merkely Commands","content":"merkely pipeline approval assert #  Assert if an artifact in Merkely has been approved for deployment.\nSynopsis #  Assert if an artifact in Merkely has been approved for deployment. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly.\nmerkely pipeline approval assert ARTIFACT-NAME-OR-PATH [flags] Options #   -t, --artifact-type string The type of the artifact to be approved. Options are [dir, file, docker]. Only required if you don't specify --sha256. -h, --help help for assert -p, --pipeline string The Merkely pipeline name. -s, --sha256 string The SHA256 fingerprint for the artifact to be approved. Only required if you don't specify --type. Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely pipeline approval\t- All approvals operations in a Merkely pipeline.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":19,"href":"/client_reference/merkely_pipeline_approval_report/","title":"merkely pipeline approval report","section":"Merkely Commands","content":"merkely pipeline approval report #  Report approval of deploying an artifact in Merkely.\nSynopsis #  Approve a deployment of an artifact in Merkely. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly.\nmerkely pipeline approval report ARTIFACT-NAME-OR-PATH [flags] Options #   -t, --artifact-type string The type of the artifact to be approved. Options are [dir, file, docker]. Only required if you don't specify --sha256. -d, --description string [optional] The approval description. -h, --help help for report --newest-commit string The source commit sha for the newest change in the deployment approval. (default \u0026quot;HEAD\u0026quot;) --oldest-commit string The source commit sha for the oldest change in the deployment approval. -p, --pipeline string The Merkely pipeline name. --repo-root string The directory where the source git repository is volume-mounted. (default \u0026quot;.\u0026quot;) -s, --sha256 string The SHA256 fingerprint for the artifact to be approved. Only required if you don't specify --type. -u, --user-data string [optional] The path to a JSON file containing additional data you would like to attach to this approval. Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely pipeline approval\t- All approvals operations in a Merkely pipeline.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":20,"href":"/client_reference/merkely_pipeline_approval_request/","title":"merkely pipeline approval request","section":"Merkely Commands","content":"merkely pipeline approval request #  Request an approval for deploying an artifact in Merkely.\nSynopsis #  Request an approval of a deployment of an artifact in Merkely. The request should be reviewed in Merkely UI. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly.\nmerkely pipeline approval request ARTIFACT-NAME-OR-PATH [flags] Options #   -t, --artifact-type string The type of the artifact to be approved. Options are [dir, file, docker]. Only required if you don't specify --sha256. -d, --description string [optional] The approval description. -h, --help help for request --newest-commit string The source commit sha for the newest change in the deployment approval. (default \u0026quot;HEAD\u0026quot;) --oldest-commit string The source commit sha for the oldest change in the deployment approval. -p, --pipeline string The Merkely pipeline name. --repo-root string The directory where the source git repository is volume-mounted. (default \u0026quot;.\u0026quot;) -s, --sha256 string The SHA256 fingerprint for the artifact to be approved. Only required if you don't specify --type. -u, --user-data string [optional] The path to a JSON file containing additional data you would like to attach to this approval. Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely pipeline approval\t- All approvals operations in a Merkely pipeline.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":21,"href":"/client_reference/merkely_pipeline_artifact/","title":"merkely pipeline artifact","section":"Merkely Commands","content":"merkely pipeline artifact #  All artifacts operations in a Merkely pipeline.\nSynopsis #  All artifacts operations in a Merkely pipeline.\nOptions #   -h, --help help for artifact Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely pipeline\t- All Merkely pipelines operations. merkely pipeline artifact report\t- All artifacts reporting operations in a Merkely pipeline.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":22,"href":"/client_reference/merkely_pipeline_artifact_report/","title":"merkely pipeline artifact report","section":"Merkely Commands","content":"merkely pipeline artifact report #  All artifacts reporting operations in a Merkely pipeline.\nSynopsis #  All artifacts reporting operations in a Merkely pipeline.\nOptions #   -h, --help help for report Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely pipeline artifact\t- All artifacts operations in a Merkely pipeline. merkely pipeline artifact report creation\t- Report an artifact creation to a Merkely pipeline. merkely pipeline artifact report evidence\t- All artifacts evidence operations in a Merkely pipeline.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":23,"href":"/client_reference/merkely_pipeline_artifact_report_creation/","title":"merkely pipeline artifact report creation","section":"Merkely Commands","content":"merkely pipeline artifact report creation #  Report an artifact creation to a Merkely pipeline.\nSynopsis #  Report an artifact creation to a pipeline in Merkely. The artifact SHA256 fingerprint is calculated and reported or,alternatively, can be provided directly. The following flags are defaulted as follows in the CI list below:\n| Bitbucket |--------------------------------------------------------------------------- | git-commit : ${BITBUCKET_COMMIT} | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} | commit-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/commits/${BITBUCKET_COMMIT} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | git-commit : ${GITHUB_SHA} | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} | commit-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA} |--------------------------------------------------------------------------- | Teamcity |--------------------------------------------------------------------------- | git-commit : ${BUILD_VCS_NUMBER} |---------------------------------------------------------------------------  merkely pipeline artifact report creation ARTIFACT-NAME-OR-PATH [flags] Options #   -t, --artifact-type string The type of the artifact. Options are [dir, file, docker]. -b, --build-url string The url of CI pipeline that built the artifact. (default \u0026quot;https://github.com/merkely-development/cli/actions/runs/1633529383\u0026quot;) -u, --commit-url string The url for the git commit that created the artifact. (default \u0026quot;https://github.com/merkely-development/cli/commit/640b7926a585aee68a6ccec17ffa96c860c130ee\u0026quot;) -C, --compliant Whether the artifact is compliant or not. (default true) -d, --description string [optional] The artifact description. -g, --git-commit string The git commit from which the artifact was created. (default \u0026quot;640b7926a585aee68a6ccec17ffa96c860c130ee\u0026quot;) -h, --help help for creation -p, --pipeline string The Merkely pipeline name. -s, --sha256 string The SHA256 fingerprint for the artifact. Only required if you don't specify --artifact-type. Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely pipeline artifact report\t- All artifacts reporting operations in a Merkely pipeline.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":24,"href":"/client_reference/merkely_pipeline_artifact_report_evidence/","title":"merkely pipeline artifact report evidence","section":"Merkely Commands","content":"merkely pipeline artifact report evidence #  All artifacts evidence operations in a Merkely pipeline.\nSynopsis #  All artifacts evidence operations in a Merkely pipeline.\nOptions #   -h, --help help for evidence Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely pipeline artifact report\t- All artifacts reporting operations in a Merkely pipeline. merkely pipeline artifact report evidence generic\t- Report a generic evidence to an artifact in a Merkely pipeline. merkely pipeline artifact report evidence pullrequest\t- Report a pull request evidence for an artifact in a Merkely pipeline. merkely pipeline artifact report evidence test\t- Report a JUnit test evidence to an artifact in a Merkely pipeline.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":25,"href":"/client_reference/merkely_pipeline_artifact_report_evidence_generic/","title":"merkely pipeline artifact report evidence generic","section":"Merkely Commands","content":"merkely pipeline artifact report evidence generic #  Report a generic evidence to an artifact in a Merkely pipeline.\nSynopsis #  Report a generic evidence to an artifact in a Merkely pipeline. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly. The following flags are defaulted as follows in the CI list below:\n| Bitbucket |--------------------------------------------------------------------------- | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} |--------------------------------------------------------------------------- | Teamcity |--------------------------------------------------------------------------- |---------------------------------------------------------------------------  merkely pipeline artifact report evidence generic ARTIFACT-NAME-OR-PATH [flags] Options #   -t, --artifact-type string The type of the artifact related to the evidence. Options are [dir, file, docker]. -b, --build-url string The url of CI pipeline that generated the evidence. (default \u0026quot;https://github.com/merkely-development/cli/actions/runs/1633529383\u0026quot;) -C, --compliant Whether the evidence is compliant or not. (default true) -d, --description string [optional] The evidence description. -e, --evidence-type string The type of evidence being reported. -h, --help help for generic -p, --pipeline string The Merkely pipeline name. -s, --sha256 string The SHA256 fingerprint for the artifact. Only required if you don't specify --type. -u, --user-data string [optional] The path to a JSON file containing additional data you would like to attach to this evidence. Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely pipeline artifact report evidence\t- All artifacts evidence operations in a Merkely pipeline.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":26,"href":"/client_reference/merkely_pipeline_artifact_report_evidence_pullrequest/","title":"merkely pipeline artifact report evidence pullrequest","section":"Merkely Commands","content":"merkely pipeline artifact report evidence pullrequest #  Report a pull request evidence for an artifact in a Merkely pipeline.\nSynopsis #  Check if a pull request exists for an artifact and report the pull-request evidence to the artifact in Merkely. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly. The following flags are defaulted as follows in the CI list below:\n| Bitbucket |--------------------------------------------------------------------------- | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} |--------------------------------------------------------------------------- | Teamcity |--------------------------------------------------------------------------- |---------------------------------------------------------------------------  merkely pipeline artifact report evidence pullrequest ARTIFACT-NAME-OR-PATH [flags] Options #   -t, --artifact-type string The type of the artifact related to the evidence. Options are [dir, file, docker]. -b, --build-url string The url of CI pipeline that generated the evidence. (default \u0026quot;https://github.com/merkely-development/cli/actions/runs/1633529383\u0026quot;) -d, --description string [optional] The evidence description. -e, --evidence-type string The type of evidence being reported. -h, --help help for pullrequest -p, --pipeline string The Merkely pipeline name. --provider string The source code repository provider name. Options are [bitbucket]. (default \u0026quot;bitbucket\u0026quot;) -s, --sha256 string The SHA256 fingerprint for the artifact. Only required if you don't specify --artifact-type. Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely pipeline artifact report evidence\t- All artifacts evidence operations in a Merkely pipeline.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":27,"href":"/client_reference/merkely_pipeline_artifact_report_evidence_test/","title":"merkely pipeline artifact report evidence test","section":"Merkely Commands","content":"merkely pipeline artifact report evidence test #  Report a JUnit test evidence to an artifact in a Merkely pipeline.\nSynopsis #  Report a JUnit test evidence to an artifact in a Merkely pipeline. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly. The following flags are defaulted as follows in the CI list below:\n| Bitbucket |--------------------------------------------------------------------------- | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} |--------------------------------------------------------------------------- | Teamcity |--------------------------------------------------------------------------- |---------------------------------------------------------------------------  merkely pipeline artifact report evidence test ARTIFACT-NAME-OR-PATH [flags] Options #   -t, --artifact-type string The type of the artifact related to the evidence. Options are [dir, file, docker]. -b, --build-url string The url of CI pipeline that generated the evidence. (default \u0026quot;https://github.com/merkely-development/cli/actions/runs/1633529383\u0026quot;) -d, --description string [optional] The evidence description. -e, --evidence-type string The type of evidence being reported. -h, --help help for test -p, --pipeline string The Merkely pipeline name. -R, --results-dir string The folder with JUnit test results. (default \u0026quot;/data/junit/\u0026quot;) -s, --sha256 string The SHA256 fingerprint for the artifact. Only required if you don't specify --type. -u, --user-data string [optional] The path to a JSON file containing additional data you would like to attach to this evidence. Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely pipeline artifact report evidence\t- All artifacts evidence operations in a Merkely pipeline.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":28,"href":"/client_reference/merkely_pipeline_declare/","title":"merkely pipeline declare","section":"Merkely Commands","content":"merkely pipeline declare #  Declare or update a Merkely pipeline\nSynopsis #  Declare or update a Merkely pipeline by providing a JSON pipefile or by providing pipeline parameters in flags. The pipefile contains the pipeline metadata and compliance policy.\nmerkely pipeline declare [flags] Examples #   * create/update a Merkely pipeline without a pipefile: merkely pipeline declare --pipeline myPipe --description desc \\ --visibility private --template artifact,evidence-type1,evidence-type2 \\ --owner owner-name --api-token topSecret * create/update a Merkely pipeline with a pipefile (this is a legacy way which will be removed in the future): merkely pipeline declare --owner owner-name --api-token topSecret --pipefile /path/to/pipefile.json * The pipefile format is: { \u0026quot;name\u0026quot;: \u0026quot;myPipe\u0026quot;, \u0026quot;description\u0026quot;: \u0026quot;pipeline short description\u0026quot;, \u0026quot;visibility\u0026quot;: \u0026quot;public or private\u0026quot;, \u0026quot;template\u0026quot;: [ \u0026quot;artifact\u0026quot;, \u0026quot;evidence-type1\u0026quot;, \u0026quot;evidence-type2\u0026quot; ] } Options #   --description string [optional] The Merkely pipeline description. -h, --help help for declare --pipefile string [deprecated] The path to the JSON pipefile. --pipeline string The name of the pipeline to be created or updated. -t, --template strings The comma-separated list of required compliance controls names. (default [artifact]) --visibility string The visibility of the Merkely pipeline. Options are [public, private]. (default \u0026quot;private\u0026quot;) Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely pipeline\t- All Merkely pipelines operations.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":29,"href":"/client_reference/merkely_pipeline_deployment/","title":"merkely pipeline deployment","section":"Merkely Commands","content":"merkely pipeline deployment #  All deployment operations in a Merkely pipeline.\nSynopsis #  All deployment operations in a Merkely pipeline.\nOptions #   -h, --help help for deployment Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely pipeline\t- All Merkely pipelines operations. merkely pipeline deployment report\t- Report a deployment to Merkely.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":30,"href":"/client_reference/merkely_pipeline_deployment_report/","title":"merkely pipeline deployment report","section":"Merkely Commands","content":"merkely pipeline deployment report #  Report a deployment to Merkely.\nSynopsis #  Report a deployment of an artifact to an environment in Merkely. The artifact SHA256 fingerprint is calculated and reported or,alternatively, can be provided directly. The following flags are defaulted as follows in the CI list below:\n| Bitbucket |--------------------------------------------------------------------------- | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} |--------------------------------------------------------------------------- | Teamcity |--------------------------------------------------------------------------- |---------------------------------------------------------------------------  merkely pipeline deployment report ARTIFACT-NAME-OR-PATH [flags] Options #   -t, --artifact-type string The type of the artifact. Options are [dir, file, docker]. -b, --build-url string The url of CI pipeline that built the artifact. (default \u0026quot;https://github.com/merkely-development/cli/actions/runs/1633529383\u0026quot;) -d, --description string [optional] The artifact description. -e, --environment string The environment name. -h, --help help for report -p, --pipeline string The Merkely pipeline name. -s, --sha256 string The SHA256 fingerprint for the artifact. Only required if you don't specify --artifact-type. -u, --user-data string [optional] The path to a JSON file containing additional data you would like to attach to this deployment. Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely pipeline deployment\t- All deployment operations in a Merkely pipeline.  Auto generated by spf13/cobra on 29-Dec-2021 #  "},{"id":31,"href":"/client_reference/merkely_version/","title":"merkely version","section":"Merkely Commands","content":"merkely version #  Print the client version information\nSynopsis #  Show the version for Merkely CLI. This will print a representation the version of Merkely CLI. The output will look something like this: version.BuildInfo{Version:\u0026ldquo;v0.0.1\u0026rdquo;, GitCommit:\u0026ldquo;fe51cd1e31e6a202cba7dead9552a6d418ded79a\u0026rdquo;, GitTreeState:\u0026ldquo;clean\u0026rdquo;, GoVersion:\u0026ldquo;go1.16.3\u0026rdquo;}\n Version is the semantic version of the release. GitCommit is the SHA for the commit that this version was built from. GitTreeState is \u0026ldquo;clean\u0026rdquo; if there are no local code changes when this binary was built, and \u0026ldquo;dirty\u0026rdquo; if the binary was built from locally modified code. GoVersion is the version of Go that was used to compile Merkely CLI.  merkely version [flags] Options #   -h, --help help for version Options inherited from parent commands #   -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default \u0026quot;merkely\u0026quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint. (default \u0026quot;https://app.merkely.com\u0026quot;) -r, --max-api-retries int How many times should API calls be retried when the API host is not reachable. (default 3) -o, --owner string The merkely user or organization. -v, --verbose Print verbose logs to stdout. SEE ALSO #   merkely\t- The Merkely evidence reporting CLI.  Auto generated by spf13/cobra on 29-Dec-2021 #  "}]