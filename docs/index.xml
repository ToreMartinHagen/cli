<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Merkely developer documentation</title><link>/reporter/docs/</link><description>Recent content on Merkely developer documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/reporter/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Merkely</title><link>/reporter/docs/merkely/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reporter/docs/merkely/</guid><description>merkely # The Merkely evidence reporting CLI.
Synopsis # The Merkely evidence reporting CLI.
Environment variables:
Name Description $MERKELY_API_TOKEN set the Merkely API token. $MERKELY_OWNER set the Merkely Pipeline Owner. $MERKELY_HOST set the Merkely host. $MERKELY_DRY_RUN indicate whether or not Merkely CLI is running in Dry Run mode. $MERKELY_MAX_API_RETRIES set the maximum number of API calling retries when the API host is not reachable.</description></item><item><title>Merkely Create</title><link>/reporter/docs/merkely_create/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reporter/docs/merkely_create/</guid><description>merkely create # Create objects in Merkely.
Synopsis # Create objects in Merkely.
Options # -h, --help help for create Options inherited from parent commands # -a, --api-token string the merkely API token. -c, --config-file string [optional] the merkely config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run whether to send the request to the endpoint or just log it in stdout. -H, --host string the merkely endpoint.</description></item><item><title>Merkely Create Pipeline</title><link>/reporter/docs/merkely_create_pipeline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reporter/docs/merkely_create_pipeline/</guid><description>merkely create pipeline # Create a Merkely pipeline
Synopsis # Create a Merkely pipeline by providing a JSON pipefile. The pipefile contains the pipeline metadata and compliance template.
merkely create pipeline [flags] Examples # * create a Merkely pipeline with a pipefile: merkely create pipeline --api-token 1234 /path/to/pipefile.json * The pipefile format is: { &amp;quot;owner&amp;quot;: &amp;quot;organization-name&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;pipeline-name&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;pipeline short description&amp;quot;, &amp;quot;visibility&amp;quot;: &amp;quot;public or private&amp;quot;, &amp;quot;template&amp;quot;: [ &amp;quot;artifact&amp;quot;, &amp;quot;evidence-type1&amp;quot;, &amp;quot;evidence-type2&amp;quot; ] } Options # -h, --help help for pipeline Options inherited from parent commands # -a, --api-token string the merkely API token.</description></item><item><title>Merkely Fingerprint</title><link>/reporter/docs/merkely_fingerprint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reporter/docs/merkely_fingerprint/</guid><description>merkely fingerprint # Print the SHA256 fingerprint of an artifact.
Synopsis # Print the SHA256 fingerprint of an artifact. Requires artifact type flag to be set. Artifact type can be one of: &amp;ldquo;file&amp;rdquo; for files, &amp;ldquo;dir&amp;rdquo; for directories, &amp;ldquo;docker&amp;rdquo; for docker images.
merkely fingerprint [flags] Options # -h, --help help for fingerprint -t, --type string the type of the artifact to calculate its SHA256 fingerprint Options inherited from parent commands # -a, --api-token string the merkely API token.</description></item><item><title>Merkely Report</title><link>/reporter/docs/merkely_report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reporter/docs/merkely_report/</guid><description>merkely report # Report compliance events to Merkely.
Synopsis # Report compliance events back to Merkely.
Options # -h, --help help for report Options inherited from parent commands # -a, --api-token string the merkely API token. -c, --config-file string [optional] the merkely config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run whether to send the request to the endpoint or just log it in stdout. -H, --host string the merkely endpoint.</description></item><item><title>Merkely Report Artifact</title><link>/reporter/docs/merkely_report_artifact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reporter/docs/merkely_report_artifact/</guid><description>merkely report artifact # Report/Log an artifact to Merkely.
Synopsis # Report an artifact to a pipeline in Merkely. The artifact SHA256 fingerprint is calculated and reported or,alternatively, can be provided directly. The following flags are defaulted as follows in the CI list below:
| Bitbucket |--------------------------------------------------------------------------- | git-commit : ${BITBUCKET_COMMIT} | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} | commit-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/commits/${BITBUCKET_COMMIT} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | git-commit : ${GITHUB_SHA} | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} | commit-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA} |--------------------------------------------------------------------------- merkely report artifact ARTIFACT-NAME-OR-PATH [flags] Options # -b, --build-url string the url of CI pipeline that built the artifact (default &amp;quot;https://github.</description></item><item><title>Merkely Report Deployment</title><link>/reporter/docs/merkely_report_deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reporter/docs/merkely_report_deployment/</guid><description>merkely report deployment # Report/Log a deployment to Merkely.
Synopsis # Report a deployment of an artifact to an environment in Merkely. The artifact SHA256 fingerprint is calculated and reported or,alternatively, can be provided directly. The following flags are defaulted as follows in the CI list below:
| Bitbucket |--------------------------------------------------------------------------- | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} |--------------------------------------------------------------------------- merkely report deployment ARTIFACT-NAME-OR-PATH [flags] Options # -b, --build-url string the url of CI pipeline that built the artifact (default &amp;quot;https://github.</description></item><item><title>Merkely Report Env</title><link>/reporter/docs/merkely_report_env/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reporter/docs/merkely_report_env/</guid><description>merkely report env # Report running artifacts in an environment to Merkely.
Synopsis # Report actual deployments in an environment back to Merkely. This allows Merkely to determine Runtime compliance status of the environment.
Options # -h, --help help for env Options inherited from parent commands # -a, --api-token string the merkely API token. -c, --config-file string [optional] the merkely config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run whether to send the request to the endpoint or just log it in stdout.</description></item><item><title>Merkely Report Env Ecs</title><link>/reporter/docs/merkely_report_env_ecs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reporter/docs/merkely_report_env_ecs/</guid><description>merkely report env ecs # Report images data from AWS ECS cluster to Merkely.
Synopsis # List the artifacts deployed in an AWS ECS cluster and their digests and report them to Merkely.
merkely report env ecs env-name [flags] Examples # * report what's running in an entire AWS ECS cluster: merkely report env ecs prod --api-token 1234 --owner exampleOrg Options # -C, --cluster string name of the ECS cluster -h, --help help for ecs -i, --id string the unique identifier of the source infrastructure of the report (e.</description></item><item><title>Merkely Report Env K8s</title><link>/reporter/docs/merkely_report_env_k8s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reporter/docs/merkely_report_env_k8s/</guid><description>merkely report env k8s # Report images data from specific namespace(s) or entire cluster to Merkely.
Synopsis # List the artifacts deployed in the k8s environment and their digests and report them to Merkely.
merkely report env k8s [-n namespace | -x namespace]... [-k /path/to/kube/config] [-i infrastructure-identifier] env-name [flags] Examples # * report what's running in an entire cluster using kubeconfig at $HOME/.kube/config: merkely report env k8s prod --api-token 1234 --owner exampleOrg --id prod-cluster * report what's running in an entire cluster using kubeconfig at $HOME/.</description></item><item><title>Merkely Report Env Server</title><link>/reporter/docs/merkely_report_env_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reporter/docs/merkely_report_env_server/</guid><description>merkely report env server # Report directory artifacts data in the given list of paths to Merkely.
Synopsis # List the artifacts deployed in a server environment and their digests and report them to Merkely.
merkely report env server [-p /path/of/artifacts/directory] [-i infrastructure-identifier] env-name [flags] Examples # * report directory artifacts running in a server at a list of paths: merkely report env server prod --api-token 1234 --owner exampleOrg --id prod-server --paths a/b/c, e/f/g Options # -h, --help help for server -i, --id string the unique identifier of the source infrastructure of the report (e.</description></item><item><title>Merkely Version</title><link>/reporter/docs/merkely_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reporter/docs/merkely_version/</guid><description>merkely version # Print the client version information
Synopsis # Show the version for Merkely CLI. This will print a representation the version of Merkely CLI. The output will look something like this: version.BuildInfo{Version:&amp;ldquo;v0.0.1&amp;rdquo;, GitCommit:&amp;ldquo;fe51cd1e31e6a202cba7dead9552a6d418ded79a&amp;rdquo;, GitTreeState:&amp;ldquo;clean&amp;rdquo;, GoVersion:&amp;ldquo;go1.16.3&amp;rdquo;}
Version is the semantic version of the release. GitCommit is the SHA for the commit that this version was built from. GitTreeState is &amp;ldquo;clean&amp;rdquo; if there are no local code changes when this binary was built, and &amp;ldquo;dirty&amp;rdquo; if the binary was built from locally modified code.</description></item></channel></rss>