<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Merkely Commands on Merkely developer documentation</title><link>https://docs.merkely.com/client_reference/</link><description>Recent content in Merkely Commands on Merkely developer documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://docs.merkely.com/client_reference/index.xml" rel="self" type="application/rss+xml"/><item><title>merkely</title><link>https://docs.merkely.com/client_reference/merkely/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely/</guid><description>merkely # The Merkely evidence reporting CLI.
Synopsis # The Merkely evidence reporting CLI.
Environment variables:
Name Description $MERKELY_API_TOKEN set the Merkely API token. $MERKELY_OWNER set the Merkely Pipeline Owner. $MERKELY_HOST set the Merkely host. $MERKELY_DRY_RUN indicate whether or not Merkely CLI is running in Dry Run mode. $MERKELY_MAX_API_RETRIES set the maximum number of API calling retries when the API host is not reachable.</description></item><item><title>merkely assert bitbucket-pullrequest</title><link>https://docs.merkely.com/client_reference/merkely_assert_bitbucket-pullrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_assert_bitbucket-pullrequest/</guid><description>merkely assert bitbucket-pullrequest # Assert if a Bitbucket pull request for the commit which produces an artifact exists.
Synopsis # Check if a pull request exists in Bitbucket for an artifact (based on the git commit that produced it) and fail if it does not.
merkely assert bitbucket-pullrequest [flags] Options # --bitbucket-password string Bitbucket password. --bitbucket-username string Bitbucket user name. --bitbucket-workspace string Bitbucket workspace. --commit string Git commit for which to find pull request evidence.</description></item><item><title>merkely assert github-pullrequest</title><link>https://docs.merkely.com/client_reference/merkely_assert_github-pullrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_assert_github-pullrequest/</guid><description>merkely assert github-pullrequest # Assert if a Github pull request for the commit which produces an artifact exists.
Synopsis # Check if a pull request exists in Github for an artifact (based on the git commit that produced it) and fail if it does not.
merkely assert github-pullrequest [flags] Options # --commit string Git commit for which to find pull request evidence. --github-org string Github organization. --github-token string Github token.</description></item><item><title>merkely environment allowedartifacts add</title><link>https://docs.merkely.com/client_reference/merkely_environment_allowedartifacts_add/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_environment_allowedartifacts_add/</guid><description>merkely environment allowedartifacts add # Add an artifact to an environment&amp;rsquo;s allowlist.
Synopsis # Add an artifact to an environment&amp;rsquo;s allowlist. The artifact SHA256 fingerprint is calculated and reported or, alternatively, can be provided directly.
merkely environment allowedartifacts add ARTIFACT-NAME-OR-PATH [flags] Options # -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint. One of: [docker, file, dir] -e, --environment string The environment name for which the artifact is allowlisted.</description></item><item><title>merkely environment declare</title><link>https://docs.merkely.com/client_reference/merkely_environment_declare/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_environment_declare/</guid><description>merkely environment declare # Declare or update a Merkely environment
Synopsis # Declare or update a Merkely environment.
merkely environment declare [flags] Examples # # declare (or update) a Merkely environment: merkely environment declare --name yourEnvironmentName \ --environment-type K8S \ --description &amp;#34;my new env&amp;#34; \ --api-token yourAPIToken \ --owner yourOrgName Options # -d, --description string [optional] The environment description. -t, --environment-type string The type of environment.</description></item><item><title>merkely environment report ecs</title><link>https://docs.merkely.com/client_reference/merkely_environment_report_ecs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_environment_report_ecs/</guid><description>merkely environment report ecs # Report images data from AWS ECS cluster to Merkely.
Synopsis # List the artifacts deployed in an AWS ECS cluster and their digests and report them to Merkely.
merkely environment report ecs env-name [flags] Examples # # report what is running in an entire AWS ECS cluster: export AWS_REGION=yourAWSRegion export AWS_ACCESS_KEY_ID=yourAWSAccessKeyID export AWS_SECRET_ACCESS_KEY=yourAWSSecretAccessKey merkely environment report ecs yourEnvironmentName \ --api-token yourAPIToken \ --owner yourOrgName Options # -C, --cluster string The name of the ECS cluster.</description></item><item><title>merkely environment report k8s</title><link>https://docs.merkely.com/client_reference/merkely_environment_report_k8s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_environment_report_k8s/</guid><description>merkely environment report k8s # Report images data from specific namespace(s) or entire cluster to Merkely.
Synopsis # List the artifacts deployed in the k8s environment and their digests and report them to Merkely.
merkely environment report k8s [-n namespace | -x namespace]... [-k /path/to/kube/config] [-i infrastructure-identifier] env-name [flags] Examples # # report what is running in an entire cluster using kubeconfig at $HOME/.kube/config: merkely environment report k8s yourEnvironmentName \ --api-token yourAPIToken \ --owner yourOrgName # report what is running in an entire cluster using kubeconfig at $HOME/.</description></item><item><title>merkely environment report lambda</title><link>https://docs.merkely.com/client_reference/merkely_environment_report_lambda/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_environment_report_lambda/</guid><description>merkely environment report lambda # Report artifact from AWS Lambda to Merkely.
Synopsis # Report the artifact deployed in an AWS Lambda and its digest to Merkely.
merkely environment report lambda env-name [flags] Examples # # report what is running in the latest version AWS Lambda function (AWS auth provided in env variables): export AWS_REGION=yourAWSRegion export AWS_ACCESS_KEY_ID=yourAWSAccessKeyID export AWS_SECRET_ACCESS_KEY=yourAWSSecretAccessKey merkely environment report lambda myEnvironment \ --function-name yourFunctionName \ --api-token yourAPIToken \ --owner yourOrgName # report what is running in a specific version of an AWS Lambda function (AWS auth provided in flags): merkely environment report lambda myEnvironment \ --function-name yourFunctionName \ --function-version yourFunctionVersion \ --aws-key-id yourAWSAccessKeyID \ --aws-secret-key yourAWSSecretAccessKey \ --aws-region yourAWSRegion \ --api-token yourAPIToken \ --owner yourOrgName Options # --aws-key-id string The AWS access key ID --aws-region string The AWS region --aws-secret-key string The AWS secret key --function-name string The name of the AWS Lambda function.</description></item><item><title>merkely environment report s3</title><link>https://docs.merkely.com/client_reference/merkely_environment_report_s3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_environment_report_s3/</guid><description>merkely environment report s3 # Report artifact from AWS S3 bucket to Merkely.
Synopsis # Report the artifact deployed in an AWS S3 bucket and its digest to Merkely.
merkely environment report s3 env-name [flags] Examples # # report what is running in an AWS S3 bucket (AWS auth provided in env variables): export AWS_REGION=yourAWSRegion export AWS_ACCESS_KEY_ID=yourAWSAccessKeyID export AWS_SECRET_ACCESS_KEY=yourAWSSecretAccessKey merkely environment report s3 yourEnvironmentName \ --bucket yourBucketName \ --api-token yourAPIToken \ --owner yourOrgName # report what is running in an AWS S3 bucket (AWS auth provided in flags): merkely environment report s3 yourEnvironmentName \ --bucket yourBucketName \ --aws-key-id yourAWSAccessKeyID \ --aws-secret-key yourAWSSecretAccessKey \ --aws-region yourAWSRegion \ --api-token yourAPIToken \ --owner yourOrgName Options # --aws-key-id string The AWS access key ID --aws-region string The AWS region --aws-secret-key string The AWS secret key --bucket string The name of the S3 bucket.</description></item><item><title>merkely environment report server</title><link>https://docs.merkely.com/client_reference/merkely_environment_report_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_environment_report_server/</guid><description>merkely environment report server # Report directory or file artifacts data in the given list of paths to Merkely.
Synopsis # List the artifacts deployed in a server environment and their digests and report them to Merkely.
merkely environment report server [-p /path/of/artifacts/directory] [-i infrastructure-identifier] env-name [flags] Examples # # report directory artifacts running in a server at a list of paths: merkely environment report server yourEnvironmentName \ --paths a/b/c, e/f/g \ --api-token yourAPIToken \ --owner yourOrgName Options # -h, --help help for server -p, --paths strings The comma separated list of artifact directories.</description></item><item><title>merkely fingerprint</title><link>https://docs.merkely.com/client_reference/merkely_fingerprint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_fingerprint/</guid><description>merkely fingerprint # Print the SHA256 fingerprint of an artifact.
Synopsis # Print the SHA256 fingerprint of an artifact. Requires artifact type flag to be set. Artifact type can be one of: &amp;ldquo;file&amp;rdquo; for files, &amp;ldquo;dir&amp;rdquo; for directories, &amp;ldquo;docker&amp;rdquo; for docker images.
merkely fingerprint [ARTIFACT-NAME-OR-PATH] [flags] Options # -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint. One of: [docker, file, dir] -h, --help help for fingerprint --registry-password string The docker registry password or access token.</description></item><item><title>merkely pipeline approval assert</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_approval_assert/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_approval_assert/</guid><description>merkely pipeline approval assert # Assert if an artifact in Merkely has been approved for deployment.
Synopsis # Assert if an artifact in Merkely has been approved for deployment. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly.
merkely pipeline approval assert [ARTIFACT-NAME-OR-PATH] [flags] Examples # # Assert that a file artifact has been approved merkely pipeline approval assert FILE.tgz \ --api-token yourAPIToken \ --owner yourOrgName \ --pipeline yourPipelineName \ --artifact-type file # Assert that an artifact with a sha256 has been approved merkely pipeline approval assert \ --api-token yourAPIToken \ --owner yourOrgName \ --pipeline yourPipelineName \ --sha256 yourSha256 Options # -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint.</description></item><item><title>merkely pipeline approval report</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_approval_report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_approval_report/</guid><description>merkely pipeline approval report # Report approval of deploying an artifact in Merkely.
Synopsis # Approve a deployment of an artifact in Merkely. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly.
merkely pipeline approval report [ARTIFACT-NAME-OR-PATH] [flags] Examples # # Report that a file artifact has been approved for deployment. # The approval is for the last 5 git commits merkely pipeline approval report FILE.</description></item><item><title>merkely pipeline approval request</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_approval_request/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_approval_request/</guid><description>merkely pipeline approval request # Request an approval for deploying an artifact in Merkely.
Synopsis # Request an approval of a deployment of an artifact in Merkely. The request should be reviewed in Merkely UI. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly.
merkely pipeline approval request [ARTIFACT-NAME-OR-PATH] [flags] Examples # # Request that a file artifact needs approval. # The approval is for the last 5 git commits merkely pipeline approval request FILE.</description></item><item><title>merkely pipeline artifact report creation</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_creation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_creation/</guid><description>merkely pipeline artifact report creation # Report an artifact creation to a Merkely pipeline.
Synopsis # Report an artifact creation to a pipeline in Merkely. The artifact SHA256 fingerprint is calculated and reported or, alternatively, can be provided directly. The following flags are defaulted as follows in the CI list below:
| Bitbucket |--------------------------------------------------------------------------- | git-commit : ${BITBUCKET_COMMIT} | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} | commit-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/commits/${BITBUCKET_COMMIT} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | git-commit : ${GITHUB_SHA} | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} | commit-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA} |--------------------------------------------------------------------------- | Teamcity |--------------------------------------------------------------------------- | git-commit : ${BUILD_VCS_NUMBER} |--------------------------------------------------------------------------- merkely pipeline artifact report creation ARTIFACT-NAME-OR-PATH [flags] Examples # # Report that a file artifact has been created for a pipeline merkely pipeline artifact report creation FILE.</description></item><item><title>merkely pipeline artifact report evidence bitbucket-pullrequest</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence_bitbucket-pullrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence_bitbucket-pullrequest/</guid><description>merkely pipeline artifact report evidence bitbucket-pullrequest # Report a Bitbucket pull request evidence for an artifact in a Merkely pipeline.
Synopsis # Check if a pull request exists for an artifact and report the pull-request evidence to the artifact in Merkely. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly. The following flags are defaulted as follows in the CI list below:
| Bitbucket |--------------------------------------------------------------------------- | build-url : https://bitbucket.</description></item><item><title>merkely pipeline artifact report evidence generic</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence_generic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence_generic/</guid><description>merkely pipeline artifact report evidence generic # Report a generic evidence to an artifact in a Merkely pipeline.
Synopsis # Report a generic evidence to an artifact in a Merkely pipeline. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly. The following flags are defaulted as follows in the CI list below:
| Bitbucket |--------------------------------------------------------------------------- | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} |--------------------------------------------------------------------------- | Teamcity |--------------------------------------------------------------------------- |--------------------------------------------------------------------------- merkely pipeline artifact report evidence generic [ARTIFACT-NAME-OR-PATH] [flags] Examples # # report a generic evidence about an artifact using an available Sha256 digest: merkely pipeline artifact report evidence generic \ --sha256 yourSha256 \ --evidence-type yourEvidenceType \ --pipeline yourPipelineName \ --build-url https://exampleci.</description></item><item><title>merkely pipeline artifact report evidence github-pullrequest</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence_github-pullrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence_github-pullrequest/</guid><description>merkely pipeline artifact report evidence github-pullrequest # Report a Github pull request evidence for an artifact in a Merkely pipeline.
Synopsis # Check if a pull request exists for an artifact and report the pull-request evidence to the artifact in Merkely. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly. The following flags are defaulted as follows in the CI list below:
| Bitbucket |--------------------------------------------------------------------------- | build-url : https://bitbucket.</description></item><item><title>merkely pipeline artifact report evidence test</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence_test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence_test/</guid><description>merkely pipeline artifact report evidence test # Report a JUnit test evidence to an artifact in a Merkely pipeline.
Synopsis # Report a JUnit test evidence to an artifact in a Merkely pipeline. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly. The following flags are defaulted as follows in the CI list below:
| Bitbucket |--------------------------------------------------------------------------- | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} |--------------------------------------------------------------------------- | Teamcity |--------------------------------------------------------------------------- |--------------------------------------------------------------------------- merkely pipeline artifact report evidence test [ARTIFACT-NAME-OR-PATH] [flags] Examples # # report a JUnit test evidence about a file artifact: merkely pipeline artifact report evidence test FILE.</description></item><item><title>merkely pipeline declare</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_declare/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_declare/</guid><description>merkely pipeline declare # Declare or update a Merkely pipeline
Synopsis # Declare or update a Merkely pipeline by providing a JSON pipefile or by providing pipeline parameters in flags. The pipefile contains the pipeline metadata and compliance policy.
merkely pipeline declare [flags] Examples # # create/update a Merkely pipeline without a pipefile: merkely pipeline declare \ --pipeline yourPipelineName \ --description yourPipelineDescription \ --visibility private OR public \ --template artifact,evidence-type1,evidence-type2 \ --api-token yourAPIToken \ --owner yourOrgName # create/update a Merkely pipeline with a pipefile (this is a legacy way which will be removed in the future): merkely pipeline declare \ --pipefile /path/to/pipefile.</description></item><item><title>merkely pipeline deployment report</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_deployment_report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_deployment_report/</guid><description>merkely pipeline deployment report # Report a deployment to Merkely.
Synopsis # Report a deployment of an artifact to an environment in Merkely. The artifact SHA256 fingerprint is calculated and reported or,alternatively, can be provided directly. The following flags are defaulted as follows in the CI list below:
| Bitbucket |--------------------------------------------------------------------------- | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} |--------------------------------------------------------------------------- | Teamcity |--------------------------------------------------------------------------- |--------------------------------------------------------------------------- merkely pipeline deployment report [ARTIFACT-NAME-OR-PATH] [flags] Options # -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint.</description></item><item><title>merkely status</title><link>https://docs.merkely.com/client_reference/merkely_status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_status/</guid><description>merkely status # Check the status of Merkely server.
Synopsis # Check the status of Merkely server.
merkely status [flags] Options # -h, --help help for status Options inherited from parent commands # -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default &amp;#34;merkely&amp;#34;) -D, --dry-run Whether to run in dry-run mode. When enabled, data is not sent to Merkely and the CLI exits with 0 exit code regardless of errors.</description></item><item><title>merkely version</title><link>https://docs.merkely.com/client_reference/merkely_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_version/</guid><description>merkely version # Print the client version information
Synopsis # Print the version for Merkely CLI.
The output will look something like this: version.BuildInfo{Version:&amp;ldquo;v0.0.1&amp;rdquo;, GitCommit:&amp;ldquo;fe51cd1e31e6a202cba7dead9552a6d418ded79a&amp;rdquo;, GitTreeState:&amp;ldquo;clean&amp;rdquo;, GoVersion:&amp;ldquo;go1.16.3&amp;rdquo;}
Version is the semantic version of the release. GitCommit is the SHA for the commit that this version was built from. GitTreeState is &amp;ldquo;clean&amp;rdquo; if there are no local code changes when this binary was built, and &amp;ldquo;dirty&amp;rdquo; if the binary was built from locally modified code.</description></item></channel></rss>