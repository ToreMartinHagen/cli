<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting started on Kosli developer documentation</title><link>https://docs.kosli.com/getting_started/</link><description>Recent content in Getting started on Kosli developer documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://docs.kosli.com/getting_started/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting started with Kosli</title><link>https://docs.kosli.com/getting_started/getting_started_with_kosli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/getting_started/getting_started_with_kosli/</guid><description>Getting started with Kosli # A typical use of Kosli follows a scenario:
Record the state of your runtime environments Connect the data from you pipelines Search in Kosli to get the whole picture We'll be using Kosli CLI to run all the commands. You can find installation instruction here .
In the examples below we report k8s type of environment but the general approach would work for any supported type.</description></item><item><title>Install Kosli</title><link>https://docs.kosli.com/getting_started/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/getting_started/installation/</guid><description>Installing the Kosli CLI # Kosli CLI can be installed from package managers, by Curling pre-built binaries, or by running inside a Docker container.
We recommend using a Docker container for the tutorials. Homebrew If you have Homebrew (available on MacOS, Linux or Windows Subsystem for Linux), you can install the Kosli CLI by running:
brew install kosli-dev/tap/kosli APT On Ubuntu or Debian Linux, you can use APT to install the Kosli CLI by running:</description></item><item><title>Use Kosli in CI Systems</title><link>https://docs.kosli.com/getting_started/use_kosli_in_ci_systems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/getting_started/use_kosli_in_ci_systems/</guid><description>Use Kosli in CI Systems # This section provides how-to guides showing you how to use Kosli to report changes from different CI systems.
Defaulted Kosli command flags from CI variables # The following flags are defaulted as follows in the CI list below:
Bitbucket Cloud Flag Default --build-url https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} --commit-url https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/commits/${BITBUCKET_COMMIT} --commit ${BITBUCKET_COMMIT} --git-commit ${BITBUCKET_COMMIT} --repository ${BITBUCKET_REPO_SLUG} --bitbucket-workspace ${BITBUCKET_WORKSPACE} Github Flag Default --build-url ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} --commit-url ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA} --commit ${GITHUB_SHA} --git-commit ${GITHUB_SHA} --repository ${GITHUB_REPOSITORY} --github-org ${GITHUB_REPOSITORY_OWNER} Teamcity Flag Default --git-commit ${BUILD_VCS_NUMBER} Github Actions # To use Kosli in Github Actions workflows, you can use the kosli CLI setup action to install the CLI on your Github Actions Runner.</description></item></channel></rss>