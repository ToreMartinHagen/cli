<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kosli developer documentation</title><link>https://docs.kosli.com/</link><description>Recent content on Kosli developer documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://docs.kosli.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Prerequisites</title><link>https://docs.kosli.com/getting_started/prerequisites/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/getting_started/prerequisites/</guid><description>Prerequisites # To follow the &amp;quot;Getting Started&amp;quot; guide you'll need to set up a few things:
Kosli account GitHub repository where you'll store your code (you can fork our demo repository) Your own k8s cluster where you'll deploy your application hub.docker.com account GitHub # If you want to use out workflow examples, there's a few things you need to configure in your GitHub repository - you can fork the github-k8s-demo repository, create your own from scratch, or use an already existing project.</description></item><item><title>Environments</title><link>https://docs.kosli.com/concepts/environments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/concepts/environments/</guid><description>Environments # Environments in Kosli provide a place to track how your systems change over time.</description></item><item><title>Pipelines</title><link>https://docs.kosli.com/concepts/pipelines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/concepts/pipelines/</guid><description>Pipeline # Environments in Kosli provide a place to track events in your CI pipelines.</description></item><item><title>Report Environment</title><link>https://docs.kosli.com/getting_started/report_environment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/getting_started/report_environment/</guid><description>Report Environment # Create an environment in Kosli # The first thing we need to configure is an environment in Kosli.
Kosli Environments is where you'll be reporting the state of your actual environments, like staging or production.
When you log in to Kosli the Environments page is the first thing you see. If you clicked around before reading this guide you'll find a link to Environments on the left side of the window in Kosli.</description></item><item><title>Report Artifact</title><link>https://docs.kosli.com/getting_started/report_artifact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/getting_started/report_artifact/</guid><description>Report Artifact # Every time you build an artifact - in our case a Docker image - you can store (and easily access) all the information you have about it in Kosli. We call it reporting an artifact.
Artifacts in Kosli are reported to Kosli Pipelines. You can find the Pipelines section just below Environments.
Create a pipeline # To report an artifact from your GitHub workflow you need to create a Kosli pipeline first.</description></item><item><title>Report Deployment</title><link>https://docs.kosli.com/getting_started/report_deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/getting_started/report_deployment/</guid><description>Report Deployment # In previous sections we covered reporting environment - so you know what's running in your cluster, and reporting artifact - so you know what you're building (and - in the future, if you add more controls, you'll know if it's verified).
The missing piece is figuring out how your artifact ended up in the environment, and that's why, when our workflow deploys to an environment, we report the deployment to that environment to Kosli.</description></item><item><title/><link>https://docs.kosli.com/helm/helm_chart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/helm/helm_chart/</guid><description>k8s-reporter # A Helm chart for installing the Merkely K8S reporter as a cronjob. The chart allows you to create a Kubernetes cronjob and all its necessary RBAC to report running images to Merkely at a given cron schedule.
Prerequisites # A Kubernetes cluster Helm v3.0+ Installing the chart # Installing from source # You can install the Merkely reporter Helm chart from source code:
git clone https://github.com/merkely-development/reporter.git cd reporter/charts/k8s-reporter helm install [RELEASE-NAME] .</description></item><item><title>Defaulted command flags from CI</title><link>https://docs.kosli.com/ci-defaults/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/ci-defaults/</guid><description> Defaulted command flags from CI # The following flags are defaulted as follows in the CI list below:
Bitbucket Cloud Flag Description --build-url https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} --commit-url https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/commits/${BITBUCKET_COMMIT} --commit ${BITBUCKET_COMMIT} --git-commit ${BITBUCKET_COMMIT} --repository ${BITBUCKET_REPO_SLUG} --bitbucket-workspace ${BITBUCKET_WORKSPACE} Github Flag Description --build-url ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} --commit-url ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA} --commit ${GITHUB_SHA} --git-commit ${GITHUB_SHA} --repository ${GITHUB_REPOSITORY} --github-org ${GITHUB_REPOSITORY_OWNER} Teamcity Flag Description --git-commit ${BUILD_VCS_NUMBER}</description></item><item><title>kosli</title><link>https://docs.kosli.com/client_reference/kosli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli/</guid><description>kosli # The Kosli CLI.
Synopsis # The Kosli evidence reporting CLI.
Environment variables:
Name Description $MERKELY_API_TOKEN set the Kosli API token. $MERKELY_OWNER set the Kosli Pipeline Owner. $MERKELY_HOST set the Kosli host. $MERKELY_DRY_RUN indicate whether or not Kosli CLI is running in Dry Run mode. $MERKELY_MAX_API_RETRIES set the maximum number of API calling retries when the API host is not reachable. $MERKELY_CONFIG_FILE set the path to Kosli config file where you can set your options.</description></item><item><title>kosli assert bitbucket-pullrequest</title><link>https://docs.kosli.com/client_reference/kosli_assert_bitbucket-pullrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_assert_bitbucket-pullrequest/</guid><description>kosli assert bitbucket-pullrequest # Assert if a Bitbucket pull request for the commit which produces an artifact exists.
Synopsis # Check if a pull request exists in Bitbucket for an artifact (based on the git commit that produced it) and fail if it does not.
kosli assert bitbucket-pullrequest [flags] Flags # Flag Description --bitbucket-password string Bitbucket password. --bitbucket-username string Bitbucket user name. --bitbucket-workspace string Bitbucket workspace. --commit string Git commit for which to find pull request evidence.</description></item><item><title>kosli assert github-pullrequest</title><link>https://docs.kosli.com/client_reference/kosli_assert_github-pullrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_assert_github-pullrequest/</guid><description>kosli assert github-pullrequest # Assert if a Github pull request for the commit which produces an artifact exists.
Synopsis # Check if a pull request exists in Github for an artifact (based on the git commit that produced it) and fail if it does not.
kosli assert github-pullrequest [flags] Flags # Flag Description --commit string Git commit for which to find pull request evidence. --github-org string Github organization. --github-token string Github token.</description></item><item><title>kosli assert status</title><link>https://docs.kosli.com/client_reference/kosli_assert_status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_assert_status/</guid><description>kosli assert status # Assert the status of Kosli server. Exits with non-zero code if Kosli server down.
Synopsis # Assert the status of Kosli server. Exits with non-zero code if Kosli server down.
kosli assert status [flags] Flags # Flag Description -h, --help help for status Options inherited from parent commands # Flag Description -a, --api-token string The Kosli API token. -c, --config-file string [optional] The Kosli config file path.</description></item><item><title>kosli environment allowedartifacts add</title><link>https://docs.kosli.com/client_reference/kosli_environment_allowedartifacts_add/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_environment_allowedartifacts_add/</guid><description>kosli environment allowedartifacts add # Add an artifact to an environment's allowlist.
Synopsis # Add an artifact to an environment's allowlist. The artifact SHA256 fingerprint is calculated and reported or, alternatively, can be provided directly.
kosli environment allowedartifacts add ARTIFACT-NAME-OR-PATH [flags] Flags # Flag Description -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint. One of: [docker, file, dir]. Only required if you don't specify 'sha256' -e, --environment string The environment name for which the artifact is allowlisted.</description></item><item><title>kosli environment declare</title><link>https://docs.kosli.com/client_reference/kosli_environment_declare/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_environment_declare/</guid><description>kosli environment declare # Declare or update a Kosli environment
Synopsis # Declare or update a Kosli environment.
kosli environment declare [flags] Flags # Flag Description -d, --description string [optional] The environment description. -t, --environment-type string The type of environment. Valid options are: [K8S, ECS, server, S3] -h, --help help for declare -n, --name string The name of environment to be created. Options inherited from parent commands # Flag Description -a, --api-token string The Kosli API token.</description></item><item><title>kosli environment diff</title><link>https://docs.kosli.com/client_reference/kosli_environment_diff/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_environment_diff/</guid><description>kosli environment diff # Diff snapshots.
Synopsis # Diff snapshots.
kosli environment diff [SNAPPISH_1] [SNAPPISH_2] [flags] Flags # Flag Description -h, --help help for diff -j, --json Print environment info as json. Options inherited from parent commands # Flag Description -a, --api-token string The Kosli API token. -c, --config-file string [optional] The Kosli config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run Whether to run in dry-run mode. When enabled, data is not sent to Kosli and the CLI exits with 0 exit code regardless of errors.</description></item><item><title>kosli environment log</title><link>https://docs.kosli.com/client_reference/kosli_environment_log/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_environment_log/</guid><description>kosli environment log # Show log of snapshots.
Synopsis # Show log of snapshots.
kosli environment log [ENVIRONMENT-NAME] [flags] Flags # Flag Description -h, --help help for log -j, --json Print environment info as json. -n, --number int Print environment info as json. (default 5) Options inherited from parent commands # Flag Description -a, --api-token string The Kosli API token. -c, --config-file string [optional] The Kosli config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run Whether to run in dry-run mode.</description></item><item><title>kosli environment ls</title><link>https://docs.kosli.com/client_reference/kosli_environment_ls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_environment_ls/</guid><description>kosli environment ls # List environments.
Synopsis # List environments.
kosli environment ls [ENVIRONMENT-NAME] [flags] Flags # Flag Description -h, --help help for ls -j, --json Print environment info as json. -l, --long Print long environment info. Options inherited from parent commands # Flag Description -a, --api-token string The Kosli API token. -c, --config-file string [optional] The Kosli config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run Whether to run in dry-run mode.</description></item><item><title>kosli environment report ecs</title><link>https://docs.kosli.com/client_reference/kosli_environment_report_ecs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_environment_report_ecs/</guid><description>kosli environment report ecs # Report images data from AWS ECS cluster to Kosli.
Synopsis # List the artifacts deployed in an AWS ECS cluster and their digests and report them to Kosli.
kosli environment report ecs env-name [flags] Flags # Flag Description -C, --cluster string The name of the ECS cluster. -h, --help help for ecs -s, --service-name string The name of the ECS service. Options inherited from parent commands # Flag Description -a, --api-token string The Kosli API token.</description></item><item><title>kosli environment report k8s</title><link>https://docs.kosli.com/client_reference/kosli_environment_report_k8s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_environment_report_k8s/</guid><description>kosli environment report k8s # Report images data from specific namespace(s) or entire cluster to Kosli.
Synopsis # List the artifacts deployed in the k8s environment and their digests and report them to Kosli.
kosli environment report k8s [-n namespace | -x namespace]... [-k /path/to/kube/config] [-i infrastructure-identifier] env-name [flags] Flags # Flag Description -x, --exclude-namespace strings The comma separated list of namespaces regex patterns NOT to report artifacts info from.</description></item><item><title>kosli environment report lambda</title><link>https://docs.kosli.com/client_reference/kosli_environment_report_lambda/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_environment_report_lambda/</guid><description>kosli environment report lambda # Report artifact from AWS Lambda to Kosli.
Synopsis # Report the artifact deployed in an AWS Lambda and its digest to Kosli.
kosli environment report lambda env-name [flags] Flags # Flag Description --aws-key-id string The AWS access key ID --aws-region string The AWS region --aws-secret-key string The AWS secret key --function-name string The name of the AWS Lambda function. --function-version string [optional] The version of the AWS Lambda function.</description></item><item><title>kosli environment report s3</title><link>https://docs.kosli.com/client_reference/kosli_environment_report_s3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_environment_report_s3/</guid><description>kosli environment report s3 # Report artifact from AWS S3 bucket to Kosli.
Synopsis # Report the artifact deployed in an AWS S3 bucket and its digest to Kosli.
kosli environment report s3 env-name [flags] Flags # Flag Description --aws-key-id string The AWS access key ID --aws-region string The AWS region --aws-secret-key string The AWS secret key --bucket string The name of the S3 bucket. -h, --help help for s3 Options inherited from parent commands # Flag Description -a, --api-token string The Kosli API token.</description></item><item><title>kosli environment report server</title><link>https://docs.kosli.com/client_reference/kosli_environment_report_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_environment_report_server/</guid><description>kosli environment report server # Report directory or file artifacts data in the given list of paths to Kosli.
Synopsis # List the artifacts deployed in a server environment and their digests and report them to Kosli.
kosli environment report server [-p /path/of/artifacts/directory] [-i infrastructure-identifier] env-name [flags] Flags # Flag Description -h, --help help for server -p, --paths strings The comma separated list of artifact directories. Options inherited from parent commands # Flag Description -a, --api-token string The Kosli API token.</description></item><item><title>kosli fingerprint</title><link>https://docs.kosli.com/client_reference/kosli_fingerprint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_fingerprint/</guid><description>kosli fingerprint # Print the SHA256 fingerprint of an artifact.
Synopsis # Print the SHA256 fingerprint of an artifact. Requires artifact type flag to be set. Artifact type can be one of: &amp;quot;file&amp;quot; for files, &amp;quot;dir&amp;quot; for directories, &amp;quot;docker&amp;quot; for docker images.
kosli fingerprint [ARTIFACT-NAME-OR-PATH] [flags] Flags # Flag Description -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint. One of: [docker, file, dir]. Only required if you don't specify 'sha256' -h, --help help for fingerprint --registry-password string The docker registry password or access token.</description></item><item><title>kosli pipeline approval assert</title><link>https://docs.kosli.com/client_reference/kosli_pipeline_approval_assert/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_pipeline_approval_assert/</guid><description>kosli pipeline approval assert # Assert if an artifact in Kosli has been approved for deployment.
Synopsis # Assert if an artifact in Kosli has been approved for deployment. Exits with non-zero code if artifact has not been approved. The artifact SHA256 fingerprint is calculated (based on --artifact-type flag) or alternatively it can be provided directly (with --sha256 flag).
kosli pipeline approval assert [ARTIFACT-NAME-OR-PATH] [flags] Flags # Flag Description -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint.</description></item><item><title>kosli pipeline approval report</title><link>https://docs.kosli.com/client_reference/kosli_pipeline_approval_report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_pipeline_approval_report/</guid><description>kosli pipeline approval report # Report to Kosli an approval of deploying an artifact.
Synopsis # Report to Kosli an approval of deploying an artifact. The artifact SHA256 fingerprint is calculated (based on --artifact-type flag) or alternatively it can be provided directly (with --sha256 flag).
kosli pipeline approval report [ARTIFACT-NAME-OR-PATH] [flags] Flags # Flag Description -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint. One of: [docker, file, dir].</description></item><item><title>kosli pipeline approval request</title><link>https://docs.kosli.com/client_reference/kosli_pipeline_approval_request/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_pipeline_approval_request/</guid><description>kosli pipeline approval request # Request in Kosli an approval of a deployment of an artifact.
Synopsis # Request in Kosli an approval of a deployment of an artifact. The request should be reviewed in Kosli UI. The artifact SHA256 fingerprint is calculated (based on --artifact-type flag) or alternatively it can be provided directly (with --sha256 flag).
kosli pipeline approval request [ARTIFACT-NAME-OR-PATH] [flags] Flags # Flag Description -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint.</description></item><item><title>kosli pipeline artifact report creation</title><link>https://docs.kosli.com/client_reference/kosli_pipeline_artifact_report_creation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_pipeline_artifact_report_creation/</guid><description>kosli pipeline artifact report creation # Report an artifact creation to a Kosli pipeline.
Synopsis # Report an artifact creation to a Kosli pipeline. The artifact SHA256 fingerprint is calculated (based on --artifact-type flag) or alternatively it can be provided directly (with --sha256 flag).
kosli pipeline artifact report creation ARTIFACT-NAME-OR-PATH [flags] Flags # Flag Description -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint. One of: [docker, file, dir].</description></item><item><title>kosli pipeline artifact report evidence bitbucket-pullrequest</title><link>https://docs.kosli.com/client_reference/kosli_pipeline_artifact_report_evidence_bitbucket-pullrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_pipeline_artifact_report_evidence_bitbucket-pullrequest/</guid><description>kosli pipeline artifact report evidence bitbucket-pullrequest # Report a Bitbucket pull request evidence for an artifact in a Kosli pipeline.
Synopsis # Check if a pull request exists for an artifact and report the pull-request evidence to the artifact in Kosli. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly.
kosli pipeline artifact report evidence bitbucket-pullrequest [ARTIFACT-NAME-OR-PATH] [flags] Flags # Flag Description -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint.</description></item><item><title>kosli pipeline artifact report evidence generic</title><link>https://docs.kosli.com/client_reference/kosli_pipeline_artifact_report_evidence_generic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_pipeline_artifact_report_evidence_generic/</guid><description>kosli pipeline artifact report evidence generic # Report a generic evidence to an artifact in a Kosli pipeline.
Synopsis # Report a generic evidence to an artifact to a Kosli pipeline. The artifact SHA256 fingerprint is calculated (based on --artifact-type flag) or alternatively it can be provided directly (with --sha256 flag).
kosli pipeline artifact report evidence generic [ARTIFACT-NAME-OR-PATH] [flags] Flags # Flag Description -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint.</description></item><item><title>kosli pipeline artifact report evidence github-pullrequest</title><link>https://docs.kosli.com/client_reference/kosli_pipeline_artifact_report_evidence_github-pullrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_pipeline_artifact_report_evidence_github-pullrequest/</guid><description>kosli pipeline artifact report evidence github-pullrequest # Report a Github pull request evidence for an artifact in a Kosli pipeline.
Synopsis # Check if a pull request exists for an artifact and report the pull-request evidence to the artifact in Kosli. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly.
kosli pipeline artifact report evidence github-pullrequest [ARTIFACT-NAME-OR-PATH] [flags] Flags # Flag Description -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint.</description></item><item><title>kosli pipeline artifact report evidence test</title><link>https://docs.kosli.com/client_reference/kosli_pipeline_artifact_report_evidence_test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_pipeline_artifact_report_evidence_test/</guid><description>kosli pipeline artifact report evidence test # Report a JUnit test evidence to an artifact in a Kosli pipeline.
Synopsis # Report a JUnit test evidence to an artifact in a Kosli pipeline. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly.
kosli pipeline artifact report evidence test [ARTIFACT-NAME-OR-PATH] [flags] Flags # Flag Description -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint.</description></item><item><title>kosli pipeline declare</title><link>https://docs.kosli.com/client_reference/kosli_pipeline_declare/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_pipeline_declare/</guid><description>kosli pipeline declare # Declare or update a Kosli pipeline
Synopsis # Declare or update a Kosli pipeline by providing a JSON pipefile or by providing pipeline parameters in flags. The pipefile contains the pipeline metadata and compliance policy.
kosli pipeline declare [flags] Flags # Flag Description --description string [optional] The Kosli pipeline description. -h, --help help for declare --pipefile string [deprecated] The path to the JSON pipefile. --pipeline string The name of the pipeline to be created or updated.</description></item><item><title>kosli pipeline deployment report</title><link>https://docs.kosli.com/client_reference/kosli_pipeline_deployment_report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_pipeline_deployment_report/</guid><description>kosli pipeline deployment report # Report a deployment to Kosli.
Synopsis # Report a deployment of an artifact to an environment in Kosli. The artifact SHA256 fingerprint is calculated and reported or,alternatively, can be provided directly.
kosli pipeline deployment report [ARTIFACT-NAME-OR-PATH] [flags] Flags # Flag Description -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint. One of: [docker, file, dir]. Only required if you don't specify 'sha256' -b, --build-url string The url of CI pipeline that built the artifact.</description></item><item><title>kosli status</title><link>https://docs.kosli.com/client_reference/kosli_status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_status/</guid><description>kosli status # Check the status of Kosli server.
Synopsis # Check the status of Kosli server.
kosli status [flags] Flags # Flag Description --assert Exit with non-zero code if Kosli server is not responding. -h, --help help for status Options inherited from parent commands # Flag Description -a, --api-token string The Kosli API token. -c, --config-file string [optional] The Kosli config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run Whether to run in dry-run mode.</description></item><item><title>kosli version</title><link>https://docs.kosli.com/client_reference/kosli_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/client_reference/kosli_version/</guid><description>kosli version # Print the client version information
Synopsis # Print the version for Kosli CLI.
The output will look something like this: version.BuildInfo{Version:&amp;quot;v0.0.1&amp;quot;, GitCommit:&amp;quot;fe51cd1e31e6a202cba7dead9552a6d418ded79a&amp;quot;, GitTreeState:&amp;quot;clean&amp;quot;, GoVersion:&amp;quot;go1.16.3&amp;quot;}
Version is the semantic version of the release. GitCommit is the SHA for the commit that this version was built from. GitTreeState is &amp;quot;clean&amp;quot; if there are no local code changes when this binary was built, and &amp;quot;dirty&amp;quot; if the binary was built from locally modified code.</description></item></channel></rss>