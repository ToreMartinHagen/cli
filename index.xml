<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Merkely developer documentation</title><link>https://docs.merkely.com/</link><description>Recent content on Merkely developer documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://docs.merkely.com/index.xml" rel="self" type="application/rss+xml"/><item><title>DevOps: Change is the New Normal</title><link>https://docs.merkely.com/concepts/devops_change_is_the_new_normal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/concepts/devops_change_is_the_new_normal/</guid><description>DevOps: Change is the New Normal # The software industry is moving away from large, monolithic, centrally managed IT systems, towards a future with small, loosely coupled and rapidly updated micro-systems.
And the rate of change is growing exponentially. Whereas in the past we would have quarterly releases orchestrated by IT departments, we now have a continuous stream of changes to production, delivered by cross functional teams operating in a you-build-it-you-run-it ownership structure.</description></item><item><title>DevOps and Change Management</title><link>https://docs.merkely.com/concepts/devops_and_change_management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/concepts/devops_and_change_management/</guid><description>DevOps and Change Management # If you work in regulated industries such as finance, medical, and retail, or even just need to follow certain industry standards such as ISO - the way you make software has compliance needs.
At a high level, all software processes have three components:
Process: You must have a defined (documented) way of working Implementation: You must follow this process Proof: You must be able to prove that you have followed this process So how are these needs typically met in traditional IT change management vs DevOps Change management?</description></item><item><title>Mapping your value stream</title><link>https://docs.merkely.com/concepts/mapping_your_value_stream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/concepts/mapping_your_value_stream/</guid><description>Mapping your value stream # When implementing DevOps Change Management, the first step is to uncover your process as a team. The way we most often do this is to run a value stream mapping exercise with the team. This can be as simple as spending 30 minutes around a whiteboard, or as involved as you like.
Many aspects of the process will be implemented in your devops automation and tooling such as:</description></item><item><title>Understanding Binary Provenance</title><link>https://docs.merkely.com/concepts/understanding_binary_provenance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/concepts/understanding_binary_provenance/</guid><description>Understanding Binary Provenance # From a security and change management perspective, the strongest form of trust in your production environment is to identify what is running and know where it came from.
This is important because all the controls, audit trails and tools are worth nothing if you can simply switch the binaries at any stage in your delivery process.
To implement binary provenance, there are two problems to solve:</description></item><item><title/><link>https://docs.merkely.com/helm/helm_chart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/helm/helm_chart/</guid><description>k8s-reporter # A Helm chart for installing the Merkely K8S reporter as a cronjob. The chart allows you to create a Kubernetes cronjob and all its necessary RBAC to report running images to Merkely at a given cron schedule.
Prerequisites # A Kubernetes cluster Helm v3.0+ Installing the chart # Installing from source # You can install the Merkely reporter Helm chart from source code:</description></item><item><title>merkely</title><link>https://docs.merkely.com/client_reference/merkely/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely/</guid><description>merkely # The Merkely evidence reporting CLI.
Synopsis # The Merkely evidence reporting CLI.
Environment variables:
Name Description $MERKELY_API_TOKEN set the Merkely API token. $MERKELY_OWNER set the Merkely Pipeline Owner. $MERKELY_HOST set the Merkely host. $MERKELY_DRY_RUN indicate whether or not Merkely CLI is running in Dry Run mode. $MERKELY_MAX_API_RETRIES set the maximum number of API calling retries when the API host is not reachable.</description></item><item><title>merkely create</title><link>https://docs.merkely.com/client_reference/merkely_create/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_create/</guid><description>merkely create # Create objects in Merkely.
Synopsis # Create objects in Merkely.
Options # -h, --help help for create Options inherited from parent commands # -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint.</description></item><item><title>merkely create environment</title><link>https://docs.merkely.com/client_reference/merkely_create_environment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_create_environment/</guid><description>merkely create environment # Create a Merkely environment
Synopsis # Create a Merkely environment.
merkely create environment [flags] Examples # * create a Merkely environment: merkely create environment --api-token 1234 --owner test --name newEnv --environment-type K8S --description &amp;quot;my new env&amp;quot; Options # -d, --description string [optional] The environment description. -t, --environment-type string The type of environment. Valid options are: [K8S, ECS, server] -h, --help help for environment -n, --name string The name of environment.</description></item><item><title>merkely create pipeline</title><link>https://docs.merkely.com/client_reference/merkely_create_pipeline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_create_pipeline/</guid><description>merkely create pipeline # Create a Merkely pipeline
Synopsis # Create a Merkely pipeline by providing a JSON pipefile or by providing pipeline parameters in flags. The pipefile contains the pipeline metadata and compliance template.
merkely create pipeline PIPELINE-NAME [flags] Examples # * create a Merkely pipeline with a pipefile: merkely create pipeline myPipe --owner owner-name --api-token topSecret --pipefile /path/to/pipefile.json * The pipefile format is: { &amp;quot;description&amp;quot;: &amp;quot;pipeline short description&amp;quot;, &amp;quot;visibility&amp;quot;: &amp;quot;public or private&amp;quot;, &amp;quot;template&amp;quot;: [ &amp;quot;artifact&amp;quot;, &amp;quot;evidence-type1&amp;quot;, &amp;quot;evidence-type2&amp;quot; ] } * create a Merkely pipeline without a pipefile: merkely create pipeline myPipe --description desc \ --visibility private --template artifact,evidence-type1,evidence-type2 \ --owner owner-name --api-token topSecret Options # --description string [optional] The Merkely pipeline description.</description></item><item><title>merkely environment</title><link>https://docs.merkely.com/client_reference/merkely_environment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_environment/</guid><description>merkely environment # All environments operations in Merkely.
Synopsis # All environments operations in Merkely.
Options # -h, --help help for environment Options inherited from parent commands # -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint.</description></item><item><title>merkely environment declare</title><link>https://docs.merkely.com/client_reference/merkely_environment_declare/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_environment_declare/</guid><description>merkely environment declare # Declare or update a Merkely environment
Synopsis # Declare or update a Merkely environment.
merkely environment declare [flags] Examples # * declare (or update) a Merkely environment: merkely environment declare --api-token 1234 --owner test --name newEnv --environment-type K8S --description &amp;quot;my new env&amp;quot; Options # -d, --description string [optional] The environment description. -t, --environment-type string The type of environment. Valid options are: [K8S, ECS, server] -h, --help help for declare -n, --name string The name of environment.</description></item><item><title>merkely environment report</title><link>https://docs.merkely.com/client_reference/merkely_environment_report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_environment_report/</guid><description>merkely environment report # Report artifacts running in an environemt to Merkely.
Synopsis # Report artifacts running in an environemt to Merkely.
Options # -h, --help help for report Options inherited from parent commands # -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout.</description></item><item><title>merkely environment report ecs</title><link>https://docs.merkely.com/client_reference/merkely_environment_report_ecs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_environment_report_ecs/</guid><description>merkely environment report ecs # Report images data from AWS ECS cluster to Merkely.
Synopsis # List the artifacts deployed in an AWS ECS cluster and their digests and report them to Merkely.
merkely environment report ecs env-name [flags] Examples # * report what's running in an entire AWS ECS cluster: merkely environment report ecs prod --api-token 1234 --owner exampleOrg Options # -C, --cluster string The name of the ECS cluster.</description></item><item><title>merkely environment report k8s</title><link>https://docs.merkely.com/client_reference/merkely_environment_report_k8s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_environment_report_k8s/</guid><description>merkely environment report k8s # Report images data from specific namespace(s) or entire cluster to Merkely.
Synopsis # List the artifacts deployed in the k8s environment and their digests and report them to Merkely.
merkely environment report k8s [-n namespace | -x namespace]... [-k /path/to/kube/config] [-i infrastructure-identifier] env-name [flags] Examples # * report what's running in an entire cluster using kubeconfig at $HOME/.kube/config: merkely environment report k8s prod --api-token 1234 --owner exampleOrg --id prod-cluster * report what's running in an entire cluster using kubeconfig at $HOME/.</description></item><item><title>merkely environment report server</title><link>https://docs.merkely.com/client_reference/merkely_environment_report_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_environment_report_server/</guid><description>merkely environment report server # Report directory or file artifacts data in the given list of paths to Merkely.
Synopsis # List the artifacts deployed in a server environment and their digests and report them to Merkely.
merkely environment report server [-p /path/of/artifacts/directory] [-i infrastructure-identifier] env-name [flags] Examples # * report directory artifacts running in a server at a list of paths: merkely environment report server prod --api-token 1234 --owner exampleOrg --id prod-server --paths a/b/c, e/f/g Options # -h, --help help for server -i, --id string The unique identifier of the source infrastructure of the report (e.</description></item><item><title>merkely fingerprint</title><link>https://docs.merkely.com/client_reference/merkely_fingerprint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_fingerprint/</guid><description>merkely fingerprint # Print the SHA256 fingerprint of an artifact.
Synopsis # Print the SHA256 fingerprint of an artifact. Requires artifact type flag to be set. Artifact type can be one of: &amp;ldquo;file&amp;rdquo; for files, &amp;ldquo;dir&amp;rdquo; for directories, &amp;ldquo;docker&amp;rdquo; for docker images.
merkely fingerprint [flags] Options # -t, --artifact-type string The type of the artifact to calculate its SHA256 fingerprint. -h, --help help for fingerprint Options inherited from parent commands # -a, --api-token string The merkely API token.</description></item><item><title>merkely pipeline</title><link>https://docs.merkely.com/client_reference/merkely_pipeline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline/</guid><description>merkely pipeline # All Merkely pipelines operations.
Synopsis # All Merkely pipelines operations.
Options # -h, --help help for pipeline Options inherited from parent commands # -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout. -H, --host string The merkely endpoint.</description></item><item><title>merkely pipeline approval</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_approval/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_approval/</guid><description>merkely pipeline approval # All approvals operations in a Merkely pipeline.
Synopsis # All approvals operations in a Merkely pipeline.
Options # -h, --help help for approval Options inherited from parent commands # -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout.</description></item><item><title>merkely pipeline approval assert</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_approval_assert/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_approval_assert/</guid><description>merkely pipeline approval assert # Assert if an artifact in Merkely has been approved for deployment.
Synopsis # Assert if an artifact in Merkely has been approved for deployment. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly.
merkely pipeline approval assert ARTIFACT-NAME-OR-PATH [flags] Options # -t, --artifact-type string The type of the artifact to be approved. Options are [dir, file, docker]. Only required if you don't specify --sha256.</description></item><item><title>merkely pipeline approval report</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_approval_report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_approval_report/</guid><description>merkely pipeline approval report # Report approval of deploying an artifact in Merkely.
Synopsis # Approve a deployment of an artifact in Merkely. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly.
merkely pipeline approval report ARTIFACT-NAME-OR-PATH [flags] Options # -t, --artifact-type string The type of the artifact to be approved. Options are [dir, file, docker]. Only required if you don't specify --sha256.</description></item><item><title>merkely pipeline approval request</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_approval_request/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_approval_request/</guid><description>merkely pipeline approval request # Request an approval for deploying an artifact in Merkely.
Synopsis # Request an approval of a deployment of an artifact in Merkely. The request should be reviewed in Merkely UI. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly.
merkely pipeline approval request ARTIFACT-NAME-OR-PATH [flags] Options # -t, --artifact-type string The type of the artifact to be approved.</description></item><item><title>merkely pipeline artifact</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_artifact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_artifact/</guid><description>merkely pipeline artifact # All artifacts operations in a Merkely pipeline.
Synopsis # All artifacts operations in a Merkely pipeline.
Options # -h, --help help for artifact Options inherited from parent commands # -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout.</description></item><item><title>merkely pipeline artifact report</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report/</guid><description>merkely pipeline artifact report # All artifacts reporting operations in a Merkely pipeline.
Synopsis # All artifacts reporting operations in a Merkely pipeline.
Options # -h, --help help for report Options inherited from parent commands # -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout.</description></item><item><title>merkely pipeline artifact report creation</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_creation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_creation/</guid><description>merkely pipeline artifact report creation # Report an artifact creation to a Merkely pipeline.
Synopsis # Report an artifact creation to a pipeline in Merkely. The artifact SHA256 fingerprint is calculated and reported or,alternatively, can be provided directly. The following flags are defaulted as follows in the CI list below:
| Bitbucket |--------------------------------------------------------------------------- | git-commit : ${BITBUCKET_COMMIT} | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} | commit-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/commits/${BITBUCKET_COMMIT} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | git-commit : ${GITHUB_SHA} | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} | commit-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA} |--------------------------------------------------------------------------- | Teamcity |--------------------------------------------------------------------------- | git-commit : ${BUILD_VCS_NUMBER} |--------------------------------------------------------------------------- merkely pipeline artifact report creation ARTIFACT-NAME-OR-PATH [flags] Options # -t, --artifact-type string The type of the artifact.</description></item><item><title>merkely pipeline artifact report evidence</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence/</guid><description>merkely pipeline artifact report evidence # All artifacts evidence operations in a Merkely pipeline.
Synopsis # All artifacts evidence operations in a Merkely pipeline.
Options # -h, --help help for evidence Options inherited from parent commands # -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout.</description></item><item><title>merkely pipeline artifact report evidence generic</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence_generic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence_generic/</guid><description>merkely pipeline artifact report evidence generic # Report a generic evidence to an artifact in a Merkely pipeline.
Synopsis # Report a generic evidence to an artifact in a Merkely pipeline. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly. The following flags are defaulted as follows in the CI list below:
| Bitbucket |--------------------------------------------------------------------------- | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} |--------------------------------------------------------------------------- | Teamcity |--------------------------------------------------------------------------- |--------------------------------------------------------------------------- merkely pipeline artifact report evidence generic ARTIFACT-NAME-OR-PATH [flags] Options # -t, --artifact-type string The type of the artifact related to the evidence.</description></item><item><title>merkely pipeline artifact report evidence pullrequest</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence_pullrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence_pullrequest/</guid><description>merkely pipeline artifact report evidence pullrequest # Report a pull request evidence for an artifact in a Merkely pipeline.
Synopsis # Check if a pull request exists for an artifact and report the pull-request evidence to the artifact in Merkely. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly. The following flags are defaulted as follows in the CI list below:
| Bitbucket |--------------------------------------------------------------------------- | build-url : https://bitbucket.</description></item><item><title>merkely pipeline artifact report evidence test</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence_test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_artifact_report_evidence_test/</guid><description>merkely pipeline artifact report evidence test # Report a JUnit test evidence to an artifact in a Merkely pipeline.
Synopsis # Report a JUnit test evidence to an artifact in a Merkely pipeline. The artifact SHA256 fingerprint is calculated or alternatively it can be provided directly. The following flags are defaulted as follows in the CI list below:
| Bitbucket |--------------------------------------------------------------------------- | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} |--------------------------------------------------------------------------- | Teamcity |--------------------------------------------------------------------------- |--------------------------------------------------------------------------- merkely pipeline artifact report evidence test ARTIFACT-NAME-OR-PATH [flags] Options # -t, --artifact-type string The type of the artifact related to the evidence.</description></item><item><title>merkely pipeline declare</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_declare/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_declare/</guid><description>merkely pipeline declare # Declare a Merkely pipeline
Synopsis # Declare or update a Merkely pipeline by providing a JSON pipefile or by providing pipeline parameters in flags. The pipefile contains the pipeline metadata and compliance policy.
merkely pipeline declare PIPELINE-NAME [flags] Examples # * create a Merkely pipeline with a pipefile: merkely pipeline declare myPipe --owner owner-name --api-token topSecret --pipefile /path/to/pipefile.json * The pipefile format is: { &amp;quot;description&amp;quot;: &amp;quot;pipeline short description&amp;quot;, &amp;quot;visibility&amp;quot;: &amp;quot;public or private&amp;quot;, &amp;quot;template&amp;quot;: [ &amp;quot;artifact&amp;quot;, &amp;quot;evidence-type1&amp;quot;, &amp;quot;evidence-type2&amp;quot; ] } * create a Merkely pipeline without a pipefile: merkely pipeline declare myPipe --description desc \ --visibility private --template artifact,evidence-type1,evidence-type2 \ --owner owner-name --api-token topSecret Options # --description string [optional] The Merkely pipeline description.</description></item><item><title>merkely pipeline deployment</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_deployment/</guid><description>merkely pipeline deployment # All deployment operations in a Merkely pipeline.
Synopsis # All deployment operations in a Merkely pipeline.
Options # -h, --help help for deployment Options inherited from parent commands # -a, --api-token string The merkely API token. -c, --config-file string [optional] The merkely config file path. (default &amp;quot;merkely&amp;quot;) -D, --dry-run Whether to send the request to the endpoint or just log it in stdout.</description></item><item><title>merkely pipeline deployment report</title><link>https://docs.merkely.com/client_reference/merkely_pipeline_deployment_report/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_pipeline_deployment_report/</guid><description>merkely pipeline deployment report # Report a deployment to Merkely.
Synopsis # Report a deployment of an artifact to an environment in Merkely. The artifact SHA256 fingerprint is calculated and reported or,alternatively, can be provided directly. The following flags are defaulted as follows in the CI list below:
| Bitbucket |--------------------------------------------------------------------------- | build-url : https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} |--------------------------------------------------------------------------- | Github |--------------------------------------------------------------------------- | build-url : ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} |--------------------------------------------------------------------------- | Teamcity |--------------------------------------------------------------------------- |--------------------------------------------------------------------------- merkely pipeline deployment report ARTIFACT-NAME-OR-PATH [flags] Options # -t, --artifact-type string The type of the artifact.</description></item><item><title>merkely version</title><link>https://docs.merkely.com/client_reference/merkely_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.merkely.com/client_reference/merkely_version/</guid><description>merkely version # Print the client version information
Synopsis # Show the version for Merkely CLI. This will print a representation the version of Merkely CLI. The output will look something like this: version.BuildInfo{Version:&amp;ldquo;v0.0.1&amp;rdquo;, GitCommit:&amp;ldquo;fe51cd1e31e6a202cba7dead9552a6d418ded79a&amp;rdquo;, GitTreeState:&amp;ldquo;clean&amp;rdquo;, GoVersion:&amp;ldquo;go1.16.3&amp;rdquo;}
Version is the semantic version of the release. GitCommit is the SHA for the commit that this version was built from. GitTreeState is &amp;ldquo;clean&amp;rdquo; if there are no local code changes when this binary was built, and &amp;ldquo;dirty&amp;rdquo; if the binary was built from locally modified code.</description></item></channel></rss>