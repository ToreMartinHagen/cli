name: release

on:
  push:
    tags:        
      - 'v*' 

env: 
  IMAGE: ghcr.io/merkely-development/watcher

jobs:
  build:
    runs-on: ubuntu-20.04
    # outputs:
    #   tag: ${{ steps.prep.outputs.tag }}
    steps:
    
    - uses: actions/checkout@v2

    # - name: Prepare
    #   id: prep
    #   run: |
    #     TAG=$(echo $GITHUB_SHA | head -c7)
    #     IMAGE=ghcr.io/merkely-development/watcher
    #     TAGGED_IMAGE=${IMAGE}:${TAG}
    #     echo "TAG=${TAG}" >> ${GITHUB_ENV}
    #     echo "IMAGE=${IMAGE}" >> ${GITHUB_ENV}
    #     echo "TAGGED_IMAGE=${TAGGED_IMAGE}" >> ${GITHUB_ENV}
    #     echo "MERKELY_FINGERPRINT=docker://${TAGGED_IMAGE}" >> ${GITHUB_ENV}
    #     echo ::set-output name=tag::${TAG}
    #     echo ::set-output name=tagged-image::${TAGGED_IMAGE}

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.29  
    
    # Set up QEMU emulator to allow building multi-arch images    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    # This is the a separate action that sets up buildx (buildkit) runner
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # So now you can use Actions' own caching!
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1

    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.IMAGE }}:${{steps.tag.outputs.tag}}  
        platforms: linux/amd64,linux/arm64, linux/386
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    # This is necessary to prevent cache from growing forever
    # till it hits GitHub's limit of 5GB.
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache 


  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - id: ldflags
        run: |
          LDFLAGS=$(make ldflags)
          echo "LDFLAGS=${LDFLAGS}" >> ${GITHUB_ENV}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LDFLAGS: ${{ env.LDFLAGS }}

  # release:
  #   name: release
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:

  #   - name: Check out code
  #     uses: actions/checkout@v2

  #   - name: Create Release
  #     uses: actions/create-release@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
  #     with:
  #       tag_name: ${{ github.ref }}
  #       release_name: Release ${{ github.ref }}
  #       draft: false
  #       prerelease: false