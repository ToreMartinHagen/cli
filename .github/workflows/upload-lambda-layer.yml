name: Upload lambda layer to AWS

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      OIDC_ROLE_ARN:
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
    outputs:
      layer_version_arn:
        value: ${{ jobs.upload.outputs.layer_version_arn }}

jobs:
  upload:
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: write
    outputs:
      layer_version_arn: ${{ steps.upload-lambda-layer.outputs.layer_version_arn }}
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-go@v3
      with:
        go-version: '1.20.2'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: ${{ inputs.OIDC_ROLE_ARN }}
        aws-region: ${{ inputs.AWS_REGION }}
        role-duration-seconds: 900
        role-session-name: ${{ github.event.repository.name }}
        mask-aws-account-id: false

    # Upload lambda layer and make iÐµ publicly accessible
    - name: Upload Kosli bin Lambda layer
      id: upload-lambda-layer
      env:
        TAG: ${{ inputs.tag }}
        LAYER_NAME: kosli-bin
        ZIP_FILE_NAME: kosli_lambda_layer.zip
      run: |
        make build
        mv kosli bin/
        zip -r $ZIP_FILE_NAME bin/kosli
        LAYER_VERSION_NUMBER=$(aws lambda publish-layer-version \
            --zip-file fileb://$ZIP_FILE_NAME \
            --layer-name $LAYER_NAME \
            --compatible-architectures x86_64 \
            --description '{"kolsi_cli_version": "${{ inputs.tag }}"}' \
            | jq .Version)
        LAYER_VERSION_ARN=$(aws lambda add-layer-version-permission \
            --layer-name $LAYER_NAME \
            --statement-id public \
            --version-number $LAYER_VERSION_NUMBER \
            --principal '*' \
            --action lambda:GetLayerVersion \
            --output json | jq -r '.Statement | fromjson | .Resource')
        echo "layer_version_arn=$(echo $LAYER_VERSION_ARN)" >> $GITHUB_OUTPUT
