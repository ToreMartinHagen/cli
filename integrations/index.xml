<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kosli integrations on Kosli developer documentation</title><link>https://docs.kosli.com/integrations/</link><description>Recent content in Kosli integrations on Kosli developer documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://docs.kosli.com/integrations/index.xml" rel="self" type="application/rss+xml"/><item><title>CI/CD</title><link>https://docs.kosli.com/integrations/ci_cd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/integrations/ci_cd/</guid><description>Use Kosli in CI Systems # This section provides how-to guides showing you how to use Kosli to report changes from different CI systems.
Defaulted Kosli command flags from CI variables # The following flags are defaulted as follows in the CI list below:
Bitbucket Cloud Flag Default --build-url https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER} --commit-url https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/commits/${BITBUCKET_COMMIT} --commit ${BITBUCKET_COMMIT} --git-commit ${BITBUCKET_COMMIT} --repository ${BITBUCKET_REPO_SLUG} --bitbucket-workspace ${BITBUCKET_WORKSPACE} Github Flag Default --build-url ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} --commit-url ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA} --commit ${GITHUB_SHA} --git-commit ${GITHUB_SHA} --repository ${GITHUB_REPOSITORY} --github-org ${GITHUB_REPOSITORY_OWNER} Gitlab Flag Default --build-url ${CI_JOB_URL} --commit-url ${CI_PROJECT_URL}/-/commit/${CI_COMMIT_SHA} --commit ${CI_COMMIT_SHA} --git-commit ${CI_COMMIT_SHA} --repository ${CI_PROJECT_NAME} --gitlab-org ${CI_PROJECT_NAMESPACE} Teamcity Flag Default --git-commit ${BUILD_VCS_NUMBER} Github Actions # To use Kosli in Github Actions workflows, you can use the kosli CLI setup action to install the CLI on your Github Actions Runner.</description></item><item><title>Slack integration</title><link>https://docs.kosli.com/integrations/slack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.kosli.com/integrations/slack/</guid><description>Slack integration # You can use slack webhook to receive notifications about changes in the status of your environments.
When one (or more) of your environments become non-compliant you'll get a notification in configured channel:
You'll also get a notification if the status changes from non-compliant to compliant:
Slack integration setup # In order to receive the notifications you need to create a slack app: https://api.slack.com/authentication/basics#creating
When your app is created add Incoming Webhooks feature.</description></item></channel></rss>